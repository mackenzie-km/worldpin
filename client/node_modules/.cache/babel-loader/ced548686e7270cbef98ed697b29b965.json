{"ast":null,"code":"var _jsxFileName = \"/Users/Mackenzie/worldpin/client/src/containers/PinContainer.js\";\nimport React, { PureComponent } from 'react';\nimport PinInput from '../components/pins/PinInput.js';\nimport PinControls from '../components/pins/PinControls.js';\nimport PinList from '../components/pins/PinList.js';\nimport ColorFilter from '../components/canvas/ColorFilter.js';\nimport { connect } from 'react-redux';\nimport { Route } from 'react-router-dom'; // Handles all of the pin logic and display\n\nclass PinContainer extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.toggleControls = event => {\n      event.preventDefault();\n      this.setState({\n        pinControls: !this.state.pinControls\n      });\n    };\n\n    this.filterByColor = color => {\n      let data = {\n        type: 'SHOW_PINS_BY_COLOR',\n        criteria: color\n      };\n      this.props.setFilter(data);\n    };\n\n    this.toggleColorFilter = event => {\n      event.preventDefault();\n\n      if (this.state.colorFilter) {\n        this.props.setFilter({\n          type: 'SHOW_ALL',\n          criteria: null\n        });\n      }\n\n      this.setState({\n        colorFilter: !this.state.colorFilter\n      });\n    };\n\n    this.handleSubmit = (event, data) => {\n      event.preventDefault();\n      data.x = this.props.capturedClick[0];\n      data.y = this.props.capturedClick[1];\n      this.props.createPin(data, this.props.id);\n      this.togglePinInput(null);\n    };\n\n    this.handleEdit = (event, data) => {\n      event.preventDefault();\n      data.x = this.props.capturedClick[0];\n      data.y = this.props.capturedClick[1];\n      this.props.editPin(data);\n      this.togglePinInput(null);\n    };\n\n    this.deletePin = id => {\n      this.props.deletePin(this.props.id, id);\n    };\n\n    this.state = {\n      pinInput: false,\n      pinControls: false,\n      colorFilter: false,\n      currentPin: {}\n    };\n  } // togglePinInput = (event, pinData = null) => {\n  //   event.preventDefault();\n  //   !!event ? e.preventDefault() : null\n  //   let map = document.getElementById('root')\n  //   this.setState({pinInput: !this.state.pinInput, currentPin: pinData})\n  //   !!this.state.pinInput ? map.style.cursor=\"default\" : map.style.cursor=\"crosshair\";\n  // }\n\n\n  render() {\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(Route, {\n      path: \"/maps/\".concat(this.props.id, \"/new\"),\n      render: routerProps => React.createElement(PinInput, Object.assign({}, routerProps, {\n        currentPin: this.state.currentPin,\n        handleSubmit: this.handleSubmit,\n        handleEdit: this.handleEdit,\n        hide: this.togglePinInput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }), !!this.state.pinControls ? React.createElement(PinControls, {\n      canvasId: this.props.id,\n      togglePinInput: this.togglePinInput,\n      toggleColorFilter: this.toggleColorFilter,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }) : null, !!this.state.pinInput ? React.createElement(PinInput, {\n      currentPin: this.state.currentPin,\n      handleSubmit: this.handleSubmit,\n      handleEdit: this.handleEdit,\n      hide: this.togglePinInput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }) : null, React.createElement(PinList, {\n      canvasId: this.props.id,\n      browserSize: this.props.browserSize,\n      togglePinInput: this.togglePinInput,\n      pins: this.props.pins,\n      delete: this.deletePin,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }), !!this.state.colorFilter ? React.createElement(ColorFilter, {\n      filterByColor: this.filterByColor,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }) : null, React.createElement(\"button\", {\n      id: \"pin-controls-toggle\",\n      onClick: this.toggleControls,\n      alt: \"more\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"material-icons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"settings\")));\n  }\n\n}\n\nconst getVisiblePins = (pins = [], data) => {\n  switch (data.type) {\n    case 'SHOW_ALL':\n      return pins;\n\n    case 'SHOW_PIN_BY_ID':\n      return pins.filter(x => x.id === data.criteria);\n\n    case 'SHOW_PINS_BY_COLOR':\n      return pins.filter(x => x.color === data.criteria);\n\n    default:\n      return pins;\n  }\n};\n\nconst mapStateToProps = state => {\n  return {\n    pins: getVisiblePins(state.pinReducer.pins, state.filterReducer)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    loadPins: id => dispatch({\n      type: 'LOAD_PINS',\n      id\n    }),\n    createPin: (data, id) => {\n      dispatch({\n        type: 'CREATING_PIN'\n      });\n      fetch(\"/maps/\".concat(id, \"/pins\"), {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data)\n      }).then(res => res.json()).then(data => dispatch({\n        type: 'CREATE_PIN',\n        data\n      }));\n    },\n    deletePin: (map_id, id) => {\n      dispatch({\n        type: 'DELETING_PIN'\n      });\n      fetch(\"/maps/\".concat(map_id, \"/pins/\").concat(id), {\n        method: 'DELETE',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        }\n      }).then(res => res.json()).then(data => dispatch({\n        type: 'DELETE_PIN',\n        data\n      }));\n    },\n    editPin: data => {\n      dispatch({\n        type: 'EDITING_PIN'\n      });\n      fetch(\"/pins/\".concat(data.id), {\n        method: 'PATCH',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data)\n      }).then(res => res.json()).then(data => dispatch({\n        type: 'EDIT_PIN',\n        data\n      }));\n    },\n    setFilter: data => {\n      dispatch({\n        type: data.type,\n        criteria: data.criteria\n      });\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PinContainer);","map":{"version":3,"sources":["/Users/Mackenzie/worldpin/client/src/containers/PinContainer.js"],"names":["React","PureComponent","PinInput","PinControls","PinList","ColorFilter","connect","Route","PinContainer","constructor","props","toggleControls","event","preventDefault","setState","pinControls","state","filterByColor","color","data","type","criteria","setFilter","toggleColorFilter","colorFilter","handleSubmit","x","capturedClick","y","createPin","id","togglePinInput","handleEdit","editPin","deletePin","pinInput","currentPin","render","routerProps","browserSize","pins","getVisiblePins","filter","mapStateToProps","pinReducer","filterReducer","mapDispatchToProps","dispatch","loadPins","fetch","method","headers","body","JSON","stringify","then","res","json","map_id"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react'\nimport PinInput from '../components/pins/PinInput.js';\nimport PinControls from '../components/pins/PinControls.js';\nimport PinList from '../components/pins/PinList.js';\nimport ColorFilter from '../components/canvas/ColorFilter.js'\nimport { connect } from 'react-redux';\nimport { Route } from 'react-router-dom';\n\n// Handles all of the pin logic and display\n\nclass PinContainer extends PureComponent {\n\nconstructor(props){\n  super(props)\n  this.state = {\n    pinInput: false,\n    pinControls: false,\n    colorFilter: false,\n    currentPin: {}\n  }\n}\n\n// togglePinInput = (event, pinData = null) => {\n//   event.preventDefault();\n//   !!event ? e.preventDefault() : null\n//   let map = document.getElementById('root')\n//   this.setState({pinInput: !this.state.pinInput, currentPin: pinData})\n//   !!this.state.pinInput ? map.style.cursor=\"default\" : map.style.cursor=\"crosshair\";\n// }\n\ntoggleControls = (event) => {\n  event.preventDefault();\n  this.setState({pinControls: !this.state.pinControls})\n}\n\nfilterByColor = (color) => {\n  let data = {type: 'SHOW_PINS_BY_COLOR', criteria: color}\n  this.props.setFilter(data);\n}\n\ntoggleColorFilter = (event) => {\n  event.preventDefault();\n  if (this.state.colorFilter) {this.props.setFilter({type: 'SHOW_ALL', criteria: null})}\n  this.setState({colorFilter: !this.state.colorFilter})\n}\n\nhandleSubmit = (event, data) => {\n  event.preventDefault()\n  data.x = this.props.capturedClick[0]\n  data.y = this.props.capturedClick[1]\n  this.props.createPin(data, this.props.id)\n  this.togglePinInput(null)\n}\n\nhandleEdit = (event, data) => {\n  event.preventDefault()\n  data.x = this.props.capturedClick[0]\n  data.y = this.props.capturedClick[1]\n  this.props.editPin(data)\n  this.togglePinInput(null)\n}\n\ndeletePin = (id) => {\n  this.props.deletePin(this.props.id, id)\n}\n\n  render() {\n    return (\n      <React.Fragment>\n        <Route path={`/maps/${this.props.id}/new`} render={routerProps => <PinInput {...routerProps} currentPin={this.state.currentPin}\n          handleSubmit={this.handleSubmit}\n          handleEdit={this.handleEdit}\n          hide={this.togglePinInput} /> }/>\n          {!!this.state.pinControls\n            ? <PinControls\n              canvasId={this.props.id}\n              togglePinInput={this.togglePinInput}\n              toggleColorFilter={this.toggleColorFilter} />\n            : null }\n          {!!this.state.pinInput\n            ? <PinInput\n              currentPin={this.state.currentPin}\n                handleSubmit={this.handleSubmit}\n                handleEdit={this.handleEdit}\n                hide={this.togglePinInput} />\n            : null}\n          {<PinList\n            canvasId={this.props.id}\n            browserSize={this.props.browserSize}\n            togglePinInput={this.togglePinInput}\n            pins={this.props.pins}\n            delete={this.deletePin} />}\n          {!!this.state.colorFilter\n            ? <ColorFilter filterByColor={this.filterByColor} />\n            : null}\n          <button id=\"pin-controls-toggle\"\n            onClick={this.toggleControls}\n            alt=\"more\">\n            <i className=\"material-icons\">settings</i>\n          </button>\n      </React.Fragment>\n    )\n  }\n}\n\nconst getVisiblePins = (pins = [], data) => {\n  switch (data.type) {\n    case 'SHOW_ALL':\n      return pins;\n    case 'SHOW_PIN_BY_ID':\n      return pins.filter(x => x.id === data.criteria);\n    case 'SHOW_PINS_BY_COLOR':\n      return pins.filter(x => x.color === data.criteria);\n    default:\n      return pins\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return { pins: getVisiblePins(state.pinReducer.pins, state.filterReducer) }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    loadPins: (id) => dispatch({type: 'LOAD_PINS', id}),\n    createPin: (data, id) => {\n      dispatch ({type: 'CREATING_PIN'});\n      fetch(`/maps/${id}/pins`, {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data)\n      })\n      .then(res => res.json())\n      .then(data => dispatch({type: 'CREATE_PIN', data}));\n    },\n    deletePin: (map_id, id) => {\n      dispatch ({type: 'DELETING_PIN'});\n      fetch(`/maps/${map_id}/pins/${id}`, {\n        method: 'DELETE',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n          }\n        })\n      .then(res => res.json())\n      .then(data => dispatch({type: 'DELETE_PIN', data}));\n    },\n    editPin: (data) => {\n      dispatch ({type: 'EDITING_PIN'});\n      fetch(`/pins/${data.id}`, {\n        method: 'PATCH',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data)\n      })\n    .then(res => res.json())\n    .then(data => dispatch({type: 'EDIT_PIN', data}))\n  },\n    setFilter: (data) => {dispatch({type: data.type, criteria: data.criteria})}\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PinContainer);\n"]},"metadata":{},"sourceType":"module"}