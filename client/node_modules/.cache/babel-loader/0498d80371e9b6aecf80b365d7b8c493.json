{"ast":null,"code":"var _jsxFileName = \"/Users/Mackenzie/worldpin/src/containers/CanvasContainer.js\";\nimport React, { PureComponent } from 'react';\nimport CanvasTitle from '../components/canvas/CanvasTitle.js';\nimport CanvasMap from '../components/canvas/CanvasMap.js';\nimport CanvasInfo from '../components/canvas/CanvasInfo';\nimport PinContainer from './PinContainer'; // All of our canvas components (title, map, info, input) & pin container called & manipulated here\n\nclass CanvasContainer extends PureComponent {\n  constructor() {\n    super();\n\n    this.returnOffset = () => {\n      let element = document.getElementsByClassName(\"canvas-map\")[0];\n      let rect = element.getBoundingClientRect();\n      let xScale = rect.width / element.offsetWidth;\n      let yScale = rect.height / element.offsetHeight;\n      return [xScale, yScale];\n    };\n\n    this.toggleInfo = event => {\n      event.preventDefault();\n      this.setState({\n        canvasInfo: !this.state.canvasInfo\n      });\n    };\n\n    this.handleMapClick = event => {\n      let element = document.getElementsByClassName(\"canvas-map\")[0];\n      let rect = element.getBoundingClientRect();\n      let x = event.clientX - rect.left;\n      let y = event.clientY - rect.top;\n      let xScale = rect.width / element.offsetWidth;\n      let yScale = rect.height / element.offsetHeight;\n      this.setState({\n        capturedClick: [x * xScale, y * yScale]\n      });\n    };\n\n    this.state = {\n      canvasInfo: false,\n      capturedClick: [],\n      offset: returnOffset\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"canvas-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(CanvasTitle, {\n      title: \"ten characters\",\n      id: 11111,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }), React.createElement(CanvasMap, {\n      url: null,\n      handleMapClick: this.handleMapClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      id: \"canvas-info\",\n      onClick: this.toggleInfo,\n      alt: \"info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"material-icons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"info\")), !!this.state.canvasInfo ? React.createElement(CanvasInfo, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }) : null, React.createElement(PinContainer, {\n      capturedClick: this.state.capturedClick,\n      offset: this.state.offset,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default CanvasContainer;","map":{"version":3,"sources":["/Users/Mackenzie/worldpin/src/containers/CanvasContainer.js"],"names":["React","PureComponent","CanvasTitle","CanvasMap","CanvasInfo","PinContainer","CanvasContainer","constructor","returnOffset","element","document","getElementsByClassName","rect","getBoundingClientRect","xScale","width","offsetWidth","yScale","height","offsetHeight","toggleInfo","event","preventDefault","setState","canvasInfo","state","handleMapClick","x","clientX","left","y","clientY","top","capturedClick","offset","render"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react'\nimport CanvasTitle from '../components/canvas/CanvasTitle.js';\nimport CanvasMap from '../components/canvas/CanvasMap.js';\nimport CanvasInfo from '../components/canvas/CanvasInfo';\nimport PinContainer from './PinContainer';\n\n// All of our canvas components (title, map, info, input) & pin container called & manipulated here\nclass CanvasContainer extends PureComponent {\n\n  constructor(){\n    super()\n    this.state = {\n      canvasInfo: false,\n      capturedClick: [],\n      offset: returnOffset\n    }\n  }\n\n  returnOffset = () => {\n    let element = document.getElementsByClassName(\"canvas-map\")[0];\n    let rect = element.getBoundingClientRect();\n    let xScale = rect.width / element.offsetWidth;\n    let yScale = rect.height / element.offsetHeight;\n    return [xScale, yScale]\n  }\n\n  toggleInfo = (event) => {\n    event.preventDefault();\n    this.setState({canvasInfo: !this.state.canvasInfo})\n  }\n\n  handleMapClick = (event) => {\n    let element = document.getElementsByClassName(\"canvas-map\")[0];\n    let rect = element.getBoundingClientRect();\n    let x = event.clientX - rect.left;\n    let y = event.clientY - rect.top;\n    let xScale = rect.width / element.offsetWidth;\n    let yScale = rect.height / element.offsetHeight;\n    this.setState({ capturedClick: [(x*xScale), (y*yScale)] })\n  }\n\n  render() {\n    return (\n      <div className=\"canvas-container\">\n          <CanvasTitle title={\"ten characters\"} id={11111} />\n          <CanvasMap url={null} handleMapClick={this.handleMapClick} />\n          <button id=\"canvas-info\" onClick={this.toggleInfo} alt=\"info\"><i className=\"material-icons\">info</i></button>\n          {!!this.state.canvasInfo ? <CanvasInfo /> : null }\n          <PinContainer capturedClick={this.state.capturedClick} offset={this.state.offset} />\n      </div>\n    )\n  }\n}\n\nexport default CanvasContainer;\n"]},"metadata":{},"sourceType":"module"}