{"ast":null,"code":"var _jsxFileName = \"/Users/Mackenzie/worldpin/src/containers/PinContainer.js\";\nimport React, { PureComponent } from 'react';\nimport PinInput from '../components/pins/PinInput.js';\nimport PinControls from '../components/pins/PinControls.js';\nimport PinList from '../components/pins/PinList.js';\nimport { connect } from 'react-redux';\nimport { VisibilityFilters } from '../actions';\nimport { SetFilter } from '../actions'; // Handles all of the pin logic and display\n\nclass PinContainer extends PureComponent {\n  constructor() {\n    super();\n\n    this.togglePinInput = (id = null) => {\n      let map = document.getElementById('root');\n      this.setState({\n        pinInput: !this.state.pinInput,\n        currentId: id || null\n      });\n      !!this.state.pinInput ? map.style.cursor = \"default\" : map.style.cursor = \"crosshair\";\n    };\n\n    this.toggleControls = event => {\n      event.preventDefault();\n      this.setState({\n        pinControls: !this.state.pinControls\n      });\n    };\n\n    this.handleSubmit = (event, data) => {\n      event.preventDefault();\n      data.location = this.props.capturedClick;\n      this.props.createPin(data);\n      this.setState({\n        currentId: null\n      });\n      this.togglePinInput(null);\n    };\n\n    this.handleEdit = (event, data) => {\n      event.preventDefault();\n      data.location = this.props.capturedClick;\n      this.props.editPin(data);\n      this.togglePinInput(null);\n    };\n\n    this.deletePin = id => {\n      this.props.deletePin(id);\n    };\n\n    this.state = {\n      pinInput: false,\n      pinControls: false,\n      currentId: null\n    };\n  }\n\n  render() {\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, !!this.state.pinControls ? React.createElement(PinControls, {\n      togglePinInput: this.togglePinInput,\n      viewButton: this.props.setFilter,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }) : null, !!this.state.pinInput ? React.createElement(PinInput, {\n      pinId: !!this.state.currentId ? this.state.currentId : null,\n      handleSubmit: this.handleSubmit,\n      handleEdit: this.handleEdit,\n      hide: this.togglePinInput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }) : null, React.createElement(PinList, {\n      browserSize: this.props.browserSize,\n      togglePinInput: this.togglePinInput,\n      pins: this.props.pins,\n      delete: this.deletePin,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      id: \"pin-controls-toggle\",\n      onClick: this.toggleControls,\n      alt: \"more\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"material-icons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"settings\")));\n  }\n\n}\n\nconst getVisiblePins = (pins, data) => {\n  switch (data.type) {\n    case 'SHOW_ALL':\n      return pins;\n\n    case 'SHOW_PIN_BY_ID':\n      return pins.filter(x => x.id === data.criteria);\n\n    case 'SHOW_PINS_BY_COLOR':\n      return pins.filter(x => x.color === data.criteria);\n\n    default:\n      return pins;\n  }\n};\n\nconst mapStateToProps = state => {\n  return {\n    pins: getVisiblePins(state.pinReducer, state.filterReducer)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    createPin: data => {\n      dispatch({\n        type: 'CREATE_PIN',\n        data\n      });\n    },\n    deletePin: data => {\n      dispatch({\n        type: 'DELETE_PIN',\n        data\n      });\n    },\n    editPin: data => {\n      dispatch({\n        type: 'EDIT_PIN',\n        data\n      });\n    },\n    setFilter: data => {\n      dispatch({\n        type: data.type,\n        criteria: data.criteria\n      });\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PinContainer);","map":{"version":3,"sources":["/Users/Mackenzie/worldpin/src/containers/PinContainer.js"],"names":["React","PureComponent","PinInput","PinControls","PinList","connect","VisibilityFilters","SetFilter","PinContainer","constructor","togglePinInput","id","map","document","getElementById","setState","pinInput","state","currentId","style","cursor","toggleControls","event","preventDefault","pinControls","handleSubmit","data","location","props","capturedClick","createPin","handleEdit","editPin","deletePin","render","setFilter","browserSize","pins","getVisiblePins","type","filter","x","criteria","color","mapStateToProps","pinReducer","filterReducer","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react'\nimport PinInput from '../components/pins/PinInput.js';\nimport PinControls from '../components/pins/PinControls.js';\nimport PinList from '../components/pins/PinList.js';\nimport { connect } from 'react-redux';\nimport { VisibilityFilters } from '../actions';\nimport { SetFilter } from '../actions';\n\n// Handles all of the pin logic and display\n\nclass PinContainer extends PureComponent {\n\nconstructor(){\n  super()\n  this.state = {\n    pinInput: false,\n    pinControls: false,\n    currentId: null\n  }\n}\n\ntogglePinInput = (id = null) => {\n  let map = document.getElementById('root')\n  this.setState({pinInput: !this.state.pinInput, currentId: id || null})\n  !!this.state.pinInput ? map.style.cursor=\"default\" : map.style.cursor=\"crosshair\";\n}\ntoggleControls = (event) => {\n  event.preventDefault();\n  this.setState({pinControls: !this.state.pinControls})\n}\n\nhandleSubmit = (event, data) => {\n  event.preventDefault()\n  data.location = this.props.capturedClick\n  this.props.createPin(data)\n  this.setState({currentId: null})\n  this.togglePinInput(null)\n}\n\nhandleEdit = (event, data) => {\n  event.preventDefault()\n  data.location = this.props.capturedClick\n  this.props.editPin(data)\n  this.togglePinInput(null)\n}\n\ndeletePin = (id) => {\n  this.props.deletePin(id)\n}\n\n  render() {\n    return (\n      <React.Fragment>\n          {!!this.state.pinControls\n            ? <PinControls\n              togglePinInput={this.togglePinInput}\n              viewButton={this.props.setFilter} />\n            : null }\n          {!!this.state.pinInput\n            ? <PinInput\n                pinId={(!!this.state.currentId) ? this.state.currentId : null }\n                handleSubmit={this.handleSubmit}\n                handleEdit={this.handleEdit}\n                hide={this.togglePinInput} />\n            : null}\n          {<PinList\n            browserSize={this.props.browserSize}\n            togglePinInput={this.togglePinInput}\n            pins={this.props.pins}\n            delete={this.deletePin} />}\n          <button id=\"pin-controls-toggle\"\n            onClick={this.toggleControls}\n            alt=\"more\">\n            <i className=\"material-icons\">settings</i>\n          </button>\n      </React.Fragment>\n    )\n  }\n}\n\nconst getVisiblePins = (pins, data) => {\n  switch (data.type) {\n    case 'SHOW_ALL':\n      return pins;\n    case 'SHOW_PIN_BY_ID':\n      return pins.filter(x => x.id === data.criteria);\n    case 'SHOW_PINS_BY_COLOR':\n      return pins.filter(x => x.color === data.criteria);\n    default:\n      return pins\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return { pins: getVisiblePins(state.pinReducer, state.filterReducer) }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    createPin: (data) => {dispatch({type: 'CREATE_PIN', data})},\n    deletePin: (data) => {dispatch({type: 'DELETE_PIN', data})},\n    editPin: (data) => {dispatch({type: 'EDIT_PIN', data})},\n    setFilter: (data) => {dispatch({type: data.type, criteria: data.criteria})}\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PinContainer);\n"]},"metadata":{},"sourceType":"module"}