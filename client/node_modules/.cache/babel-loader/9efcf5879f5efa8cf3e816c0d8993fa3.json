{"ast":null,"code":"var _jsxFileName = \"/Users/Mackenzie/worldpin/src/containers/PinContainer.js\";\nimport React, { PureComponent } from 'react';\nimport PinInput from '../components/pins/PinInput.js';\nimport PinControls from '../components/pins/PinControls.js';\nimport PinList from '../components/pins/PinList.js';\nimport ColorFilter from '../components/canvas/ColorFilter.js';\nimport { connect } from 'react-redux';\nimport { VisibilityFilters } from '../actions';\nimport { SetFilter } from '../actions'; // Handles all of the pin logic and display\n\nclass PinContainer extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.togglePinInput = (id = null) => {\n      let map = document.getElementById('root');\n      this.setState({\n        pinInput: !this.state.pinInput,\n        currentId: id || null\n      });\n      !!this.state.pinInput ? map.style.cursor = \"default\" : map.style.cursor = \"crosshair\";\n    };\n\n    this.toggleControls = event => {\n      event.preventDefault();\n      this.setState({\n        pinControls: !this.state.pinControls\n      });\n    };\n\n    this.filterByColor = color => {\n      let data = {\n        type: 'SHOW_PINS_BY_COLOR',\n        criteria: color\n      };\n      this.props.setFilter(data);\n    };\n\n    this.toggleColorFilter = event => {\n      event.preventDefault();\n      !!this.state.colorFilter ? this.props.setFilter({\n        type: 'SHOW_ALL',\n        criteria: null\n      }) : null;\n      this.setState({\n        colorFilter: !this.state.colorFilter\n      });\n    };\n\n    this.handleSubmit = (event, data) => {\n      event.preventDefault();\n      data.location = this.props.capturedClick;\n      this.props.createPin(data);\n      this.setState({\n        currentId: null\n      });\n      this.togglePinInput(null);\n    };\n\n    this.handleEdit = (event, data) => {\n      event.preventDefault();\n      data.location = this.props.capturedClick;\n      this.props.editPin(data);\n      this.togglePinInput(null);\n    };\n\n    this.deletePin = id => {\n      this.props.deletePin(id);\n    };\n\n    this.state = {\n      pinInput: false,\n      pinControls: false,\n      currentId: null,\n      colorFilter: false\n    };\n  }\n\n  render() {\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, !!this.state.pinControls ? React.createElement(PinControls, {\n      togglePinInput: this.togglePinInput,\n      toggleColorFilter: this.toggleColorFilter,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }) : null, !!this.state.pinInput ? React.createElement(PinInput, {\n      pinId: !!this.state.currentId ? this.state.currentId : null,\n      handleSubmit: this.handleSubmit,\n      handleEdit: this.handleEdit,\n      hide: this.togglePinInput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }) : null, React.createElement(PinList, {\n      browserSize: this.props.browserSize,\n      togglePinInput: this.togglePinInput,\n      pins: this.props.pins,\n      delete: this.deletePin,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }), !!this.state.colorFilter ? React.createElement(ColorFilter, {\n      filterByColor: this.filterByColor,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }) : null, React.createElement(\"button\", {\n      id: \"pin-controls-toggle\",\n      onClick: this.toggleControls,\n      alt: \"more\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"material-icons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"settings\")));\n  }\n\n}\n\nconst getVisiblePins = (pins, data) => {\n  switch (data.type) {\n    case 'SHOW_ALL':\n      return pins;\n\n    case 'SHOW_PIN_BY_ID':\n      return pins.filter(x => x.id === data.criteria.id);\n\n    case 'SHOW_PINS_BY_COLOR':\n      return pins.filter(x => x.color === data.criteria.color);\n\n    default:\n      return pins;\n  }\n};\n\nconst mapStateToProps = state => {\n  return {\n    pins: getVisiblePins(state.pinReducer, state.filterReducer)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    createPin: data => {\n      dispatch({\n        type: 'CREATE_PIN',\n        data\n      });\n    },\n    deletePin: data => {\n      dispatch({\n        type: 'DELETE_PIN',\n        data\n      });\n    },\n    editPin: data => {\n      dispatch({\n        type: 'EDIT_PIN',\n        data\n      });\n    },\n    setFilter: data => {\n      dispatch({\n        type: data.type,\n        criteria: data.criteria\n      });\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PinContainer);","map":{"version":3,"sources":["/Users/Mackenzie/worldpin/src/containers/PinContainer.js"],"names":["React","PureComponent","PinInput","PinControls","PinList","ColorFilter","connect","VisibilityFilters","SetFilter","PinContainer","constructor","props","togglePinInput","id","map","document","getElementById","setState","pinInput","state","currentId","style","cursor","toggleControls","event","preventDefault","pinControls","filterByColor","color","data","type","criteria","setFilter","toggleColorFilter","colorFilter","handleSubmit","location","capturedClick","createPin","handleEdit","editPin","deletePin","render","browserSize","pins","getVisiblePins","filter","x","mapStateToProps","pinReducer","filterReducer","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react'\nimport PinInput from '../components/pins/PinInput.js';\nimport PinControls from '../components/pins/PinControls.js';\nimport PinList from '../components/pins/PinList.js';\nimport ColorFilter from '../components/canvas/ColorFilter.js'\nimport { connect } from 'react-redux';\nimport { VisibilityFilters } from '../actions';\nimport { SetFilter } from '../actions';\n\n// Handles all of the pin logic and display\n\nclass PinContainer extends PureComponent {\n\nconstructor(props){\n  super(props)\n  this.state = {\n    pinInput: false,\n    pinControls: false,\n    currentId: null,\n    colorFilter: false\n  }\n}\n\ntogglePinInput = (id = null) => {\n  let map = document.getElementById('root')\n  this.setState({pinInput: !this.state.pinInput, currentId: id || null})\n  !!this.state.pinInput ? map.style.cursor=\"default\" : map.style.cursor=\"crosshair\";\n}\n\ntoggleControls = (event) => {\n  event.preventDefault();\n  this.setState({pinControls: !this.state.pinControls})\n}\n\nfilterByColor = (color) => {\n  let data = {type: 'SHOW_PINS_BY_COLOR', criteria: color}\n  this.props.setFilter(data);\n}\n\ntoggleColorFilter = (event) => {\n  event.preventDefault();\n  (!!this.state.colorFilter) ? this.props.setFilter({type: 'SHOW_ALL', criteria: null}) : null;\n  this.setState({colorFilter: !this.state.colorFilter})\n}\n\nhandleSubmit = (event, data) => {\n  event.preventDefault()\n  data.location = this.props.capturedClick\n  this.props.createPin(data)\n  this.setState({currentId: null})\n  this.togglePinInput(null)\n}\n\nhandleEdit = (event, data) => {\n  event.preventDefault()\n  data.location = this.props.capturedClick\n  this.props.editPin(data)\n  this.togglePinInput(null)\n}\n\ndeletePin = (id) => {\n  this.props.deletePin(id)\n}\n\n  render() {\n    return (\n      <React.Fragment>\n          {!!this.state.pinControls\n            ? <PinControls\n              togglePinInput={this.togglePinInput}\n              toggleColorFilter={this.toggleColorFilter} />\n            : null }\n          {!!this.state.pinInput\n            ? <PinInput\n                pinId={(!!this.state.currentId) ? this.state.currentId : null }\n                handleSubmit={this.handleSubmit}\n                handleEdit={this.handleEdit}\n                hide={this.togglePinInput} />\n            : null}\n          {<PinList\n            browserSize={this.props.browserSize}\n            togglePinInput={this.togglePinInput}\n            pins={this.props.pins}\n            delete={this.deletePin} />}\n          {!!this.state.colorFilter\n            ? <ColorFilter filterByColor={this.filterByColor} />\n            : null}\n          <button id=\"pin-controls-toggle\"\n            onClick={this.toggleControls}\n            alt=\"more\">\n            <i className=\"material-icons\">settings</i>\n          </button>\n      </React.Fragment>\n    )\n  }\n}\n\nconst getVisiblePins = (pins, data) => {\n  switch (data.type) {\n    case 'SHOW_ALL':\n      return pins;\n    case 'SHOW_PIN_BY_ID':\n      return pins.filter(x => x.id === data.criteria.id);\n    case 'SHOW_PINS_BY_COLOR':\n      return pins.filter(x => x.color === data.criteria.color);\n    default:\n      return pins\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return { pins: getVisiblePins(state.pinReducer, state.filterReducer) }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    createPin: (data) => {dispatch({type: 'CREATE_PIN', data})},\n    deletePin: (data) => {dispatch({type: 'DELETE_PIN', data})},\n    editPin: (data) => {dispatch({type: 'EDIT_PIN', data})},\n    setFilter: (data) => {dispatch({type: data.type, criteria: data.criteria})}\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PinContainer);\n"]},"metadata":{},"sourceType":"module"}