{"ast":null,"code":"export function fetchMapInfo(id) {\n  return (dispatch, id) => {\n    dispatch({\n      type: 'LOADING_MAP'\n    });\n    fetch(\"/maps/\".concat(id)).then(res => res.json()).then(json => dispatch({\n      type: 'LOAD_PINS',\n      json\n    }));\n  };\n}\nexport function createPin(data, id) {\n  return (dispatch, data, id) => {\n    dispatch({\n      type: 'CREATING_PIN'\n    });\n    fetch(\"/maps/\".concat(id, \"/pins\"), {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data)\n    }).then(res => res.json()).then(data => dispatch({\n      type: 'CREATE_PIN',\n      data\n    }));\n  };\n}\nexport function deletePin(map_id, id) {\n  return (dispatch, map_id, id) => {\n    dispatch({\n      type: 'DELETING_PIN'\n    });\n    fetch(\"/maps/\".concat(map_id, \"/pins/\").concat(id), {\n      method: 'DELETE',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      }\n    }).then(res => res.json()).then(data => dispatch({\n      type: 'DELETE_PIN',\n      data\n    }));\n  };\n}\nexport function editPin(data) {\n  return (dispatch, data) => {\n    dispatch({\n      type: 'EDITING_PIN'\n    });\n    fetch(\"/pins/\".concat(data.id), {\n      method: 'PATCH',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data)\n    }).then(res => res.json()).then(data => dispatch({\n      type: 'EDIT_PIN',\n      data\n    }));\n  };\n}\nexport function setFilter(data) {\n  return (dispatch, data) => {\n    dispatch({\n      type: data.type,\n      criteria: data.criteria\n    });\n  };\n}","map":{"version":3,"sources":["/Users/Mackenzie/worldpin/client/src/actions/api.js"],"names":["fetchMapInfo","id","dispatch","type","fetch","then","res","json","createPin","data","method","headers","body","JSON","stringify","deletePin","map_id","editPin","setFilter","criteria"],"mappings":"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","sourcesContent":["export function fetchMapInfo(id) {\n  return (dispatch, id) => {\n    dispatch ({type: 'LOADING_MAP'});\n    fetch(`/maps/${id}`)\n    .then(res => res.json())\n    .then(json => dispatch({type: 'LOAD_PINS', json}))\n  }\n}\n\nexport function createPin(data, id) {\n  return (dispatch, data, id) => {\n    dispatch ({type: 'CREATING_PIN'});\n    fetch(`/maps/${id}/pins`, {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data)\n    })\n    .then(res => res.json())\n    .then(data => dispatch({type: 'CREATE_PIN', data}));\n  }\n}\n\nexport function deletePin(map_id, id){\n  return (dispatch, map_id, id) => {\n    dispatch ({type: 'DELETING_PIN'});\n    fetch(`/maps/${map_id}/pins/${id}`, {\n      method: 'DELETE',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n        }\n      })\n    .then(res => res.json())\n    .then(data => dispatch({type: 'DELETE_PIN', data}));\n  }\n}\n\nexport function editPin(data) {\n  return (dispatch, data) => {\n    dispatch ({type: 'EDITING_PIN'});\n    fetch(`/pins/${data.id}`, {\n      method: 'PATCH',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data)\n    })\n    .then(res => res.json())\n    .then(data => dispatch({type: 'EDIT_PIN', data}))\n  }\n}\n\nexport function setFilter(data){\n  return (dispatch, data) => {\n    dispatch({type: data.type, criteria: data.criteria})\n  }\n}\n"]},"metadata":{},"sourceType":"module"}