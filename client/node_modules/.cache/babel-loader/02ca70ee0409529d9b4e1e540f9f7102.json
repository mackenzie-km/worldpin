{"ast":null,"code":"var _jsxFileName = \"/Users/Mackenzie/worldpin/src/components/pins/Pin.js\";\nimport React from 'react';\nimport PinPopup from './PinPopup.js';\n\nconst Pin = props => {\n  return React.createElement(\"div\", {\n    className: \"pin\",\n    style: {\n      backgroundColor: props.info.color,\n      top: \"\".concat(props.info.location[1] / props.browserSize.y * 100, \"%\"),\n      left: \"\".concat(props.info.location[0] / props.browserSize.x * 100, \"%\")\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    onHover: React.createElement(PinPopup, {\n      info: props.info,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }));\n};\n\nexport default Pin;","map":{"version":3,"sources":["/Users/Mackenzie/worldpin/src/components/pins/Pin.js"],"names":["React","PinPopup","Pin","props","backgroundColor","info","color","top","location","browserSize","y","left","x"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,eAArB;;AAEA,MAAMC,GAAG,GAAIC,KAAD,IAAW;AACrB,SACE;AAAK,IAAA,SAAS,EAAC,KAAf;AACE,IAAA,KAAK,EAAE;AACLC,MAAAA,eAAe,EAAED,KAAK,CAACE,IAAN,CAAWC,KADvB;AAELC,MAAAA,GAAG,YAAKJ,KAAK,CAACE,IAAN,CAAWG,QAAX,CAAoB,CAApB,IAAuBL,KAAK,CAACM,WAAN,CAAkBC,CAAzC,GAA2C,GAAhD,MAFE;AAGLC,MAAAA,IAAI,YAAKR,KAAK,CAACE,IAAN,CAAWG,QAAX,CAAoB,CAApB,IAAuBL,KAAK,CAACM,WAAN,CAAkBG,CAAzC,GAA2C,GAAhD;AAHC,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME;AAAO,IAAA,OAAO,EAAE,oBAAC,QAAD;AAAU,MAAA,IAAI,EAAET,KAAK,CAACE,IAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CADF;AAUD,CAXD;;AAaA,eAAeH,GAAf","sourcesContent":["import React from 'react';\nimport PinPopup from './PinPopup.js';\n\nconst Pin = (props) => {\n  return(\n    <div className=\"pin\"\n      style={{\n        backgroundColor: props.info.color,\n        top: `${props.info.location[1]/props.browserSize.y*100}%`,\n        left: `${props.info.location[0]/props.browserSize.x*100}%`\n      }}>\n      <label onHover={<PinPopup info={props.info} />}/>\n    </div>\n  )\n}\n\nexport default Pin;\n"]},"metadata":{},"sourceType":"module"}