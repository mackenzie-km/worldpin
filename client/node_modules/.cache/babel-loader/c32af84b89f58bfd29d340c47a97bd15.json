{"ast":null,"code":"var _jsxFileName = \"/Users/Mackenzie/worldpin/src/containers/PinContainer.js\";\nimport React, { PureComponent } from 'react';\nimport PinInput from '../components/pins/PinInput.js';\nimport PinControls from '../components/pins/PinControls.js';\nimport PinList from '../components/pins/PinList.js';\nimport { connect } from 'react-redux'; // Handles all of the pin logic and display\n\nclass PinContainer extends PureComponent {\n  constructor() {\n    super();\n\n    this.togglePinInput = event => {\n      this.setState({\n        pinInput: !this.state.pinInput\n      });\n    };\n\n    this.toggleControls = event => {\n      event.preventDefault();\n      this.setState({\n        pinControls: !this.state.pinControls\n      });\n    };\n\n    this.addButton = () => {\n      this.togglePinInput();\n    };\n\n    this.editButton = () => {\n      console.log(\"edit\");\n    };\n\n    this.deleteButton = () => {\n      console.log(\"delete\");\n    };\n\n    this.viewButton = () => {\n      console.log(\"view\");\n    };\n\n    this.handleSubmit = (event, data) => {\n      event.preventDefault();\n      let location = this.props.capturedClick;\n      data.push(location);\n      this.props.createPin(data);\n      this.togglePinInput();\n    };\n\n    this.state = {\n      pinInput: false,\n      pinControls: false\n    };\n  }\n\n  render() {\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, !!this.state.pinControls ? React.createElement(PinControls, {\n      addButton: this.addButton,\n      editButton: this.editButton,\n      deleteButton: this.deleteButton,\n      viewButton: this.viewButton,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }) : null, !!this.state.pinInput ? React.createElement(PinInput, {\n      id: null,\n      handleSubmit: this.handleSubmit,\n      hide: this.togglePinInput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }) : null, React.createElement(PinList, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      id: \"pin-controls-toggle\",\n      onClick: this.toggleControls,\n      alt: \"more\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"material-icons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"settings\")));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    pins: state.pins\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    createPin: data => {\n      dispatch({\n        type: 'CREATE_PIN',\n        data\n      });\n    },\n    deletePin: () => {\n      dispatch();\n    },\n    editPin: () => {\n      dispatch();\n    },\n    filterPins: () => {\n      dispatch();\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PinContainer);","map":{"version":3,"sources":["/Users/Mackenzie/worldpin/src/containers/PinContainer.js"],"names":["React","PureComponent","PinInput","PinControls","PinList","connect","PinContainer","constructor","togglePinInput","event","setState","pinInput","state","toggleControls","preventDefault","pinControls","addButton","editButton","console","log","deleteButton","viewButton","handleSubmit","data","location","props","capturedClick","push","createPin","render","mapStateToProps","pins","mapDispatchToProps","dispatch","type","deletePin","editPin","filterPins"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;AACA,OAAOC,QAAP,MAAqB,gCAArB;AACA,OAAOC,WAAP,MAAwB,mCAAxB;AACA,OAAOC,OAAP,MAAoB,+BAApB;AACA,SAASC,OAAT,QAAwB,aAAxB,C,CAEA;;AAEA,MAAMC,YAAN,SAA2BL,aAA3B,CAAyC;AAEzCM,EAAAA,WAAW,GAAE;AACX;;AADW,SAQbC,cARa,GAQKC,KAAD,IAAW;AAC1B,WAAKC,QAAL,CAAc;AAACC,QAAAA,QAAQ,EAAE,CAAC,KAAKC,KAAL,CAAWD;AAAvB,OAAd;AACD,KAVY;;AAAA,SAYbE,cAZa,GAYKJ,KAAD,IAAW;AAC1BA,MAAAA,KAAK,CAACK,cAAN;AACA,WAAKJ,QAAL,CAAc;AAACK,QAAAA,WAAW,EAAE,CAAC,KAAKH,KAAL,CAAWG;AAA1B,OAAd;AACD,KAfY;;AAAA,SAiBbC,SAjBa,GAiBD,MAAM;AAChB,WAAKR,cAAL;AACD,KAnBY;;AAAA,SAqBbS,UArBa,GAqBA,MAAM;AACjBC,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACD,KAvBY;;AAAA,SAyBbC,YAzBa,GAyBE,MAAM;AACnBF,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACD,KA3BY;;AAAA,SA6BbE,UA7Ba,GA6BA,MAAM;AACjBH,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACD,KA/BY;;AAAA,SAiCbG,YAjCa,GAiCE,CAACb,KAAD,EAAQc,IAAR,KAAiB;AAC9Bd,MAAAA,KAAK,CAACK,cAAN;AACA,UAAIU,QAAQ,GAAG,KAAKC,KAAL,CAAWC,aAA1B;AACAH,MAAAA,IAAI,CAACI,IAAL,CAAWH,QAAX;AACA,WAAKC,KAAL,CAAWG,SAAX,CAAqBL,IAArB;AACA,WAAKf,cAAL;AACD,KAvCY;;AAEX,SAAKI,KAAL,GAAa;AACXD,MAAAA,QAAQ,EAAE,KADC;AAEXI,MAAAA,WAAW,EAAE;AAFF,KAAb;AAID;;AAmCCc,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,CAAC,CAAC,KAAKjB,KAAL,CAAWG,WAAb,GAA2B,oBAAC,WAAD;AAAa,MAAA,SAAS,EAAE,KAAKC,SAA7B;AAAwC,MAAA,UAAU,EAAE,KAAKC,UAAzD;AAAqE,MAAA,YAAY,EAAE,KAAKG,YAAxF;AAAsG,MAAA,UAAU,EAAE,KAAKC,UAAvH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA3B,GAAmK,IADxK,EAEK,CAAC,CAAC,KAAKT,KAAL,CAAWD,QAAb,GAAwB,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAE,IAAd;AAAoB,MAAA,YAAY,EAAE,KAAKW,YAAvC;AAAqD,MAAA,IAAI,EAAE,KAAKd,cAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAxB,GAA6G,IAFlH,EAGI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,EAII;AAAQ,MAAA,EAAE,EAAC,qBAAX;AAAiC,MAAA,OAAO,EAAE,KAAKK,cAA/C;AAA+D,MAAA,GAAG,EAAC,MAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA0E;AAAG,MAAA,SAAS,EAAC,gBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAA1E,CAJJ,CADF;AAQD;;AApDsC;;AAuDzC,MAAMiB,eAAe,GAAIlB,KAAD,IAAW;AACjC,SAAO;AAAEmB,IAAAA,IAAI,EAAEnB,KAAK,CAACmB;AAAd,GAAP;AACD,CAFD;;AAIA,MAAMC,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO;AACLL,IAAAA,SAAS,EAAGL,IAAD,IAAU;AAACU,MAAAA,QAAQ,CAAC;AAACC,QAAAA,IAAI,EAAE,YAAP;AAAqBX,QAAAA;AAArB,OAAD,CAAR;AAAqC,KADtD;AAELY,IAAAA,SAAS,EAAE,MAAM;AAACF,MAAAA,QAAQ;AAAG,KAFxB;AAGLG,IAAAA,OAAO,EAAE,MAAM;AAACH,MAAAA,QAAQ;AAAG,KAHtB;AAILI,IAAAA,UAAU,EAAE,MAAM;AAACJ,MAAAA,QAAQ;AAAG;AAJzB,GAAP;AAMD,CAPD;;AASA,eAAe5B,OAAO,CAACyB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6C1B,YAA7C,CAAf","sourcesContent":["import React, { PureComponent } from 'react'\nimport PinInput from '../components/pins/PinInput.js';\nimport PinControls from '../components/pins/PinControls.js';\nimport PinList from '../components/pins/PinList.js';\nimport { connect } from 'react-redux';\n\n// Handles all of the pin logic and display\n\nclass PinContainer extends PureComponent {\n\nconstructor(){\n  super()\n  this.state = {\n    pinInput: false,\n    pinControls: false\n  }\n}\n\ntogglePinInput = (event) => {\n  this.setState({pinInput: !this.state.pinInput})\n}\n\ntoggleControls = (event) => {\n  event.preventDefault();\n  this.setState({pinControls: !this.state.pinControls})\n}\n\naddButton = () => {\n  this.togglePinInput()\n}\n\neditButton = () => {\n  console.log(\"edit\")\n}\n\ndeleteButton = () => {\n  console.log(\"delete\")\n}\n\nviewButton = () => {\n  console.log(\"view\")\n}\n\nhandleSubmit = (event, data) => {\n  event.preventDefault()\n  let location = this.props.capturedClick\n  data.push((location: location))\n  this.props.createPin(data)\n  this.togglePinInput()\n}\n\n  render() {\n    return (\n      <React.Fragment>\n          {!!this.state.pinControls ? <PinControls addButton={this.addButton} editButton={this.editButton} deleteButton={this.deleteButton} viewButton={this.viewButton} /> : null }\n          {!!this.state.pinInput ? <PinInput id={null} handleSubmit={this.handleSubmit} hide={this.togglePinInput} /> : null}\n          <PinList />\n          <button id=\"pin-controls-toggle\" onClick={this.toggleControls} alt=\"more\"><i className=\"material-icons\">settings</i></button>\n      </React.Fragment>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return { pins: state.pins }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    createPin: (data) => {dispatch({type: 'CREATE_PIN', data})},\n    deletePin: () => {dispatch()},\n    editPin: () => {dispatch()},\n    filterPins: () => {dispatch()}\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PinContainer);\n"]},"metadata":{},"sourceType":"module"}