{"ast":null,"code":"var _jsxFileName = \"/Users/Mackenzie/worldpin/client/src/containers/PinContainer.js\";\nimport React, { PureComponent } from 'react';\nimport PinInput from '../components/pins/PinInput.js';\nimport PinControls from '../components/pins/PinControls.js';\nimport PinList from '../components/pins/PinList.js';\nimport ColorFilter from '../components/canvas/ColorFilter.js';\nimport CanvasTitle from '../components/canvas/CanvasTitle.js';\nimport CanvasMap from '../components/canvas/CanvasMap.js';\nimport CanvasInfo from '../components/canvas/CanvasInfo';\nimport { withRouter } from 'react-router';\nimport { fetchMapInfo, createPin, deletePin, editPin, setFilter } from '../actions/api.js';\nimport { connect } from 'react-redux';\nimport { Route } from 'react-router-dom'; // Handles all of the pin logic and display\n\nclass PinContainer extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.toggleInfo = event => {\n      event.preventDefault();\n      this.props.history.location.pathname === this.state.url ? this.props.history.push(\"\".concat(this.state.url, \"/info\")) : this.props.history.replace(\"\".concat(this.state.url));\n    };\n\n    this.handleMapClick = event => {\n      let x = event.clientX;\n      let y = event.clientY;\n      console.log({\n        capturedClick: [x, y]\n      });\n      this.setState({\n        capturedClick: [x, y]\n      });\n    };\n\n    this.calculateOffset = () => {\n      let element = document.getElementsByClassName(\"canvas-map\")[0];\n      let rect = element.getBoundingClientRect();\n      let currentSize = {\n        x: rect.width,\n        y: rect.height\n      };\n      this.setState({\n        browserSize: currentSize\n      });\n    };\n\n    this.togglePinInput = (pinData = null) => {\n      if (!this.state.pinInput && !!pinData) {\n        this.props.history.push(\"\".concat(this.state.url, \"/pins/\").concat(pinData.id, \"/edit\"));\n      } else if (!this.state.pinInput && !pinData) {\n        this.props.history.push(\"\".concat(this.state.url, \"/pins/new\"));\n      } else {\n        this.props.history.replace(\"\".concat(this.state.url));\n      }\n\n      let map = document.getElementById('root');\n      !!this.state.pinInput ? map.style.cursor = \"default\" : map.style.cursor = \"crosshair\";\n      this.setState({\n        pinInput: !this.state.pinInput,\n        currentPin: pinData\n      });\n    };\n\n    this.toggleControls = event => {\n      event.preventDefault();\n      this.setState({\n        pinControls: !this.state.pinControls\n      });\n    };\n\n    this.filterByColor = color => {\n      let data = {\n        type: 'SHOW_PINS_BY_COLOR',\n        criteria: color\n      };\n      this.props.setFilter(data);\n    };\n\n    this.toggleColorFilter = event => {\n      event.preventDefault();\n\n      if (this.state.colorFilter) {\n        this.props.setFilter({\n          type: 'SHOW_ALL',\n          criteria: null\n        });\n      }\n\n      this.setState({\n        colorFilter: !this.state.colorFilter\n      });\n    };\n\n    this.handleSubmit = (event, data) => {\n      event.preventDefault();\n      data.x = this.state.capturedClick[0];\n      data.y = this.state.capturedClick[1];\n      this.props.createPin(data, this.props.id);\n      this.togglePinInput(null);\n    };\n\n    this.handleEdit = (event, data) => {\n      event.preventDefault();\n      data.x = this.state.capturedClick[0];\n      data.y = this.state.capturedClick[1];\n      this.props.editPin(data);\n      this.togglePinInput(null);\n    };\n\n    this.deletePin = id => {\n      this.props.deletePin(this.props.id, id);\n    };\n\n    this.state = {\n      canvasId: props.router.params.id,\n      url: props.router.url,\n      pinControls: false,\n      colorFilter: false,\n      currentPin: {},\n      pinInput: false,\n      capturedClick: [],\n      browserSize: {\n        x: 1366,\n        y: 768\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.props.fetchMapInfo(this.state.canvasId);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"canvas-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(CanvasTitle, {\n      title: \"ten characters\",\n      id: 11111,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }), React.createElement(CanvasMap, {\n      url: null,\n      handleMapClick: this.handleMapClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      id: \"canvas-info\",\n      onClick: this.toggleInfo,\n      alt: \"info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"material-icons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, \"info\")), React.createElement(Route, {\n      path: \"\".concat(this.state.url, \"/info\"),\n      component: CanvasInfo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }), !!this.state.pinControls ? React.createElement(PinControls, {\n      togglePinInput: this.togglePinInput,\n      toggleColorFilter: this.toggleColorFilter,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }) : null, React.createElement(Route, {\n      path: \"\".concat(this.state.url, \"/pins/new\"),\n      render: () => React.createElement(PinInput, {\n        currentPin: this.state.currentPin,\n        handleSubmit: this.handleSubmit,\n        handleEdit: this.handleEdit,\n        hide: this.togglePinInput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"\".concat(this.state.url, \"/pins/:id/edit\"),\n      render: () => React.createElement(PinInput, {\n        currentPin: this.state.currentPin,\n        handleSubmit: this.handleSubmit,\n        handleEdit: this.handleEdit,\n        hide: this.togglePinInput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }), React.createElement(PinList, {\n      canvasId: this.props.id,\n      browserSize: this.state.browserSize,\n      togglePinInput: this.togglePinInput,\n      pins: this.props.pins,\n      delete: this.deletePin,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }), !!this.state.colorFilter ? React.createElement(ColorFilter, {\n      filterByColor: this.filterByColor,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }) : null, React.createElement(\"button\", {\n      id: \"pin-controls-toggle\",\n      onClick: this.toggleControls,\n      alt: \"more\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"material-icons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, \"settings\")));\n  }\n\n}\n\nconst getVisiblePins = (pins = [], data = {}) => {\n  switch (data.type) {\n    case 'SHOW_ALL':\n      return pins;\n\n    case 'SHOW_PIN_BY_ID':\n      return pins.filter(x => x.id === data.criteria);\n\n    case 'SHOW_PINS_BY_COLOR':\n      return pins.filter(x => x.color === data.criteria);\n\n    default:\n      return pins;\n  }\n};\n\nconst mapStateToProps = state => {\n  return {\n    pins: getVisiblePins(state.pinReducer.pins, state.filterReducer)\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  fetchMapInfo: id => dispatch(fetchMapInfo(id)),\n  createPin: (data, id) => dispatch(createPin(data, id)),\n  deletePin: (map_id, id) => dispatch(deletePin(map_id, id)),\n  editPin: data => dispatch(editPin(data)),\n  setFilter: data => dispatch(setFilter(data))\n});\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(PinContainer));\n/* Write what I learned about routing and also putting actions in api.js */","map":{"version":3,"sources":["/Users/Mackenzie/worldpin/client/src/containers/PinContainer.js"],"names":["React","PureComponent","PinInput","PinControls","PinList","ColorFilter","CanvasTitle","CanvasMap","CanvasInfo","withRouter","fetchMapInfo","createPin","deletePin","editPin","setFilter","connect","Route","PinContainer","constructor","props","toggleInfo","event","preventDefault","history","location","pathname","state","url","push","replace","handleMapClick","x","clientX","y","clientY","console","log","capturedClick","setState","calculateOffset","element","document","getElementsByClassName","rect","getBoundingClientRect","currentSize","width","height","browserSize","togglePinInput","pinData","pinInput","id","map","getElementById","style","cursor","currentPin","toggleControls","pinControls","filterByColor","color","data","type","criteria","toggleColorFilter","colorFilter","handleSubmit","handleEdit","canvasId","router","params","componentDidMount","render","pins","getVisiblePins","filter","mapStateToProps","pinReducer","filterReducer","mapDispatchToProps","dispatch","map_id"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\nimport PinInput from '../components/pins/PinInput.js';\nimport PinControls from '../components/pins/PinControls.js';\nimport PinList from '../components/pins/PinList.js';\nimport ColorFilter from '../components/canvas/ColorFilter.js';\nimport CanvasTitle from '../components/canvas/CanvasTitle.js';\nimport CanvasMap from '../components/canvas/CanvasMap.js';\nimport CanvasInfo from '../components/canvas/CanvasInfo';\nimport { withRouter } from 'react-router';\nimport {\n  fetchMapInfo,\n  createPin,\n  deletePin,\n  editPin,\n  setFilter } from '../actions/api.js';\nimport { connect } from 'react-redux';\nimport { Route } from 'react-router-dom';\n\n// Handles all of the pin logic and display\n\nclass PinContainer extends PureComponent {\nconstructor(props){\n  super(props)\n  this.state = {\n    canvasId: props.router.params.id,\n    url: props.router.url,\n    pinControls: false,\n    colorFilter: false,\n    currentPin: {},\n    pinInput: false,\n    capturedClick: [],\n    browserSize: {x: 1366, y: 768}\n  }\n}\n\ncomponentDidMount() {\n  this.props.fetchMapInfo(this.state.canvasId)\n}\n\n\ntoggleInfo = (event) => {\n  event.preventDefault();\n  this.props.history.location.pathname === this.state.url\n    ? this.props.history.push(`${this.state.url}/info`)\n    : this.props.history.replace(`${this.state.url}`)\n}\n\nhandleMapClick = (event) => {\n  let x = event.clientX;\n  let y = event.clientY;\n  console.log({capturedClick: [x, y]})\n  this.setState({ capturedClick: [x, y] })\n}\n\ncalculateOffset = () => {\n  let element = document.getElementsByClassName(\"canvas-map\")[0];\n  let rect = element.getBoundingClientRect();\n  let currentSize = {x: rect.width, y: rect.height};\n  this.setState({ browserSize: currentSize  })\n}\n\ntogglePinInput = (pinData = null) => {\n  if (!this.state.pinInput && !!pinData) {\n    this.props.history.push(`${this.state.url}/pins/${pinData.id}/edit`)\n  } else if (!this.state.pinInput && !pinData) {\n    this.props.history.push(`${this.state.url}/pins/new`)\n  } else {\n    this.props.history.replace(`${this.state.url}`)\n  }\n  let map = document.getElementById('root')\n  !!this.state.pinInput ? map.style.cursor=\"default\" : map.style.cursor=\"crosshair\";\n  this.setState({pinInput: !this.state.pinInput, currentPin: pinData})\n}\n\ntoggleControls = (event) => {\n  event.preventDefault();\n  this.setState({pinControls: !this.state.pinControls})\n}\n\nfilterByColor = (color) => {\n  let data = {type: 'SHOW_PINS_BY_COLOR', criteria: color}\n  this.props.setFilter(data);\n}\n\ntoggleColorFilter = (event) => {\n  event.preventDefault();\n  if (this.state.colorFilter) {this.props.setFilter({type: 'SHOW_ALL', criteria: null})}\n  this.setState({colorFilter: !this.state.colorFilter})\n}\n\nhandleSubmit = (event, data) => {\n  event.preventDefault()\n  data.x = this.state.capturedClick[0]\n  data.y = this.state.capturedClick[1]\n  this.props.createPin(data, this.props.id)\n  this.togglePinInput(null)\n}\n\nhandleEdit = (event, data) => {\n  event.preventDefault()\n  data.x = this.state.capturedClick[0]\n  data.y = this.state.capturedClick[1]\n  this.props.editPin(data)\n  this.togglePinInput(null)\n}\n\ndeletePin = (id) => {\n  this.props.deletePin(this.props.id, id)\n}\n\n  render() {\n    return (\n      <div className=\"canvas-container\">\n      <CanvasTitle title={\"ten characters\"} id={11111} />\n      <CanvasMap url={null} handleMapClick={this.handleMapClick} />\n      <button id=\"canvas-info\" onClick={this.toggleInfo} alt=\"info\"><i className=\"material-icons\">info</i></button>\n      <Route path={`${this.state.url}/info`} component={CanvasInfo} />\n        {!!this.state.pinControls\n          ? <PinControls\n            togglePinInput={this.togglePinInput}\n            toggleColorFilter={this.toggleColorFilter} />\n          : null }\n      <Route path={`${this.state.url}/pins/new`} render={()=> (\n        <PinInput\n          currentPin={this.state.currentPin}\n          handleSubmit={this.handleSubmit}\n          handleEdit={this.handleEdit}\n          hide={this.togglePinInput} />\n      )} />\n      <Route path={`${this.state.url}/pins/:id/edit`} render={()=> (\n        <PinInput\n          currentPin={this.state.currentPin}\n          handleSubmit={this.handleSubmit}\n          handleEdit={this.handleEdit}\n          hide={this.togglePinInput} />\n      )} />\n        {<PinList\n          canvasId={this.props.id}\n          browserSize={this.state.browserSize}\n          togglePinInput={this.togglePinInput}\n          pins={this.props.pins}\n          delete={this.deletePin} />}\n        {!!this.state.colorFilter\n          ? <ColorFilter filterByColor={this.filterByColor} />\n          : null}\n          <button id=\"pin-controls-toggle\"\n            onClick={this.toggleControls}\n            alt=\"more\">\n            <i className=\"material-icons\">settings</i>\n          </button>\n      </div>\n    )\n  }\n}\n\nconst getVisiblePins = (pins = [], data = {}) => {\n  switch (data.type) {\n    case 'SHOW_ALL':\n      return pins;\n    case 'SHOW_PIN_BY_ID':\n      return pins.filter(x => x.id === data.criteria);\n    case 'SHOW_PINS_BY_COLOR':\n      return pins.filter(x => x.color === data.criteria);\n    default:\n      return pins\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return { pins: getVisiblePins(state.pinReducer.pins, state.filterReducer) }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n    fetchMapInfo: (id) => dispatch(fetchMapInfo(id)),\n    createPin: (data, id) => dispatch(createPin(data, id)),\n    deletePin: (map_id, id) => dispatch(deletePin(map_id, id)),\n    editPin: (data) => dispatch(editPin(data)),\n    setFilter: (data) => dispatch(setFilter(data)),\n})\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(PinContainer));\n\n/* Write what I learned about routing and also putting actions in api.js */\n"]},"metadata":{},"sourceType":"module"}