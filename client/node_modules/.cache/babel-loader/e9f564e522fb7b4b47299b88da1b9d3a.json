{"ast":null,"code":"var _jsxFileName = \"/Users/Mackenzie/worldpin/src/containers/CanvasContainer.js\";\nimport React, { PureComponent } from 'react';\nimport CanvasTitle from '../components/canvas/CanvasTitle.js';\nimport CanvasMap from '../components/canvas/CanvasMap.js';\nimport CanvasInfo from '../components/canvas/CanvasInfo';\nimport PinContainer from './PinContainer'; // All of our canvas components (title, map, info, input) & pin container called & manipulated here\n\nclass CanvasContainer extends PureComponent {\n  constructor() {\n    super();\n\n    this.toggleInfo = event => {\n      event.preventDefault();\n      this.setState({\n        canvasInfo: !this.state.canvasInfo\n      });\n    };\n\n    this.handleMapClick = event => {\n      let element = document.getElementsByClassName(\"canvas-container\")[0];\n      let rect = element.getBoundingClientRect();\n      debugger;\n      let x = event.clientX - rect.left;\n      let y = event.clientY - rect.top;\n      console.log({\n        capturedClick: [x * this.state.scale.x, y * this.state.scale.y]\n      });\n      this.setState({\n        capturedClick: [x * this.state.scale.x, y * this.state.scale.y]\n      });\n    };\n\n    this.calculateOffset = () => {\n      let defaultBrowser = {\n        x: 1366,\n        y: 768\n      };\n      let element = document.getElementsByClassName(\"canvas-map\")[0];\n      let rect = element.getBoundingClientRect();\n      let xScale = rect.width / defaultBrowser.x;\n      let yScale = rect.height / defaultBrowser.y;\n      this.setState({\n        scale: {\n          x: xScale,\n          y: yScale\n        }\n      });\n      console.log({\n        scale: {\n          x: xScale,\n          y: yScale\n        }\n      });\n    };\n\n    this.state = {\n      canvasInfo: false,\n      capturedClick: [],\n      scale: {\n        x: 1,\n        y: 1\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.calculateOffset();\n    window.addEventListener(\"resize\", this.calculateOffset);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"canvas-container\",\n      handleMapClick: this.handleMapClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(CanvasTitle, {\n      title: \"ten characters\",\n      id: 11111,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }), React.createElement(CanvasMap, {\n      url: null,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      id: \"canvas-info\",\n      onClick: this.toggleInfo,\n      alt: \"info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"material-icons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"info\")), !!this.state.canvasInfo ? React.createElement(CanvasInfo, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }) : null, React.createElement(PinContainer, {\n      capturedClick: this.state.capturedClick,\n      scale: this.state.scale,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default CanvasContainer;","map":{"version":3,"sources":["/Users/Mackenzie/worldpin/src/containers/CanvasContainer.js"],"names":["React","PureComponent","CanvasTitle","CanvasMap","CanvasInfo","PinContainer","CanvasContainer","constructor","toggleInfo","event","preventDefault","setState","canvasInfo","state","handleMapClick","element","document","getElementsByClassName","rect","getBoundingClientRect","x","clientX","left","y","clientY","top","console","log","capturedClick","scale","calculateOffset","defaultBrowser","xScale","width","yScale","height","componentDidMount","window","addEventListener","render"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react'\nimport CanvasTitle from '../components/canvas/CanvasTitle.js';\nimport CanvasMap from '../components/canvas/CanvasMap.js';\nimport CanvasInfo from '../components/canvas/CanvasInfo';\nimport PinContainer from './PinContainer';\n\n// All of our canvas components (title, map, info, input) & pin container called & manipulated here\nclass CanvasContainer extends PureComponent {\n\n  constructor(){\n    super()\n    this.state = {\n      canvasInfo: false,\n      capturedClick: [],\n      scale: {x: 1, y: 1}\n    }\n  }\n\n  componentDidMount(){\n    this.calculateOffset()\n    window.addEventListener(\"resize\", this.calculateOffset);\n  }\n\n  toggleInfo = (event) => {\n    event.preventDefault();\n    this.setState({canvasInfo: !this.state.canvasInfo})\n  }\n\n  handleMapClick = (event) => {\n    let element = document.getElementsByClassName(\"canvas-container\")[0];\n    let rect = element.getBoundingClientRect();\n    debugger\n    let x = event.clientX - rect.left;\n    let y = event.clientY - rect.top;\n    console.log({capturedClick: [(x*this.state.scale.x), (y*this.state.scale.y)]})\n    this.setState({ capturedClick: [(x*this.state.scale.x), (y*this.state.scale.y)] })\n  }\n\n  calculateOffset = () => {\n    let defaultBrowser = {x: 1366, y: 768}\n    let element = document.getElementsByClassName(\"canvas-map\")[0];\n    let rect = element.getBoundingClientRect();\n    let xScale = rect.width / defaultBrowser.x ;\n    let yScale = rect.height / defaultBrowser.y;\n    this.setState({scale: {x: xScale, y: yScale}})\n    console.log({scale: {x: xScale, y: yScale}})\n  }\n\n  render() {\n    return (\n      <div className=\"canvas-container\" handleMapClick={this.handleMapClick} >\n          <CanvasTitle title={\"ten characters\"} id={11111} />\n          <CanvasMap url={null}/>\n          <button id=\"canvas-info\" onClick={this.toggleInfo} alt=\"info\"><i className=\"material-icons\">info</i></button>\n          {!!this.state.canvasInfo ? <CanvasInfo /> : null }\n          <PinContainer capturedClick={this.state.capturedClick} scale={this.state.scale} />\n      </div>\n    )\n  }\n}\n\nexport default CanvasContainer;\n"]},"metadata":{},"sourceType":"module"}