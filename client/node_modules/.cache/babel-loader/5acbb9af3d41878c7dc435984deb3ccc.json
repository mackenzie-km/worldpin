{"ast":null,"code":"var _jsxFileName = \"/Users/Mackenzie/worldpin/src/containers/CanvasContainer.js\";\nimport React, { PureComponent } from 'react';\nimport CanvasTitle from '../components/canvas/CanvasTitle.js';\nimport CanvasMap from '../components/canvas/CanvasMap.js';\nimport CanvasInfo from '../components/canvas/CanvasInfo';\nimport PinContainer from './PinContainer'; // All of our canvas components (title, map, info, input) & pin container called & manipulated here\n\nclass CanvasContainer extends PureComponent {\n  constructor() {\n    super();\n\n    this.toggleInfo = event => {\n      event.preventDefault();\n      this.setState({\n        canvasInfo: !this.state.canvasInfo\n      });\n    };\n\n    this.handleMapClick = event => {\n      let element = document.getElementsByClassName(\"canvas-map\")[0];\n      let rect = element.getBoundingClientRect();\n      let x = event.clientX;\n      let y = event.clientY;\n      console.log({\n        capturedClick: [x, y]\n      });\n      this.setState({\n        capturedClick: [x, y]\n      });\n    };\n\n    this.calculateOffset = () => {\n      let pastSize = this.state.browserSize;\n      let element = document.getElementsByClassName(\"canvas-map\")[0];\n      let rect = element.getBoundingClientRect();\n      let currentSize = {\n        x: rect.width,\n        y: rect.height\n      };\n      let difference = {\n        x: pastSize.x - currentSize.x,\n        y: pastSize.y - currentSize.y\n      };\n      console.log({\n        browserSize: currentSize,\n        pastSize,\n        difference\n      });\n      this.setState({\n        browserSize: currentSize,\n        difference: difference\n      });\n    };\n\n    this.state = {\n      canvasInfo: false,\n      capturedClick: [],\n      browserSize: {\n        x: 1366,\n        y: 768\n      },\n      difference: {\n        x: 0,\n        y: 0\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.calculateOffset();\n    window.addEventListener(\"resize\", this.calculateOffset);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"canvas-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(CanvasTitle, {\n      title: \"ten characters\",\n      id: 11111,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }), React.createElement(CanvasMap, {\n      url: null,\n      handleMapClick: this.handleMapClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      id: \"canvas-info\",\n      onClick: this.toggleInfo,\n      alt: \"info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"material-icons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"info\")), !!this.state.canvasInfo ? React.createElement(CanvasInfo, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }) : null, React.createElement(PinContainer, {\n      capturedClick: this.state.capturedClick,\n      difference: this.state.difference,\n      browserSize: this.state.browserSize,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default CanvasContainer;","map":{"version":3,"sources":["/Users/Mackenzie/worldpin/src/containers/CanvasContainer.js"],"names":["React","PureComponent","CanvasTitle","CanvasMap","CanvasInfo","PinContainer","CanvasContainer","constructor","toggleInfo","event","preventDefault","setState","canvasInfo","state","handleMapClick","element","document","getElementsByClassName","rect","getBoundingClientRect","x","clientX","y","clientY","console","log","capturedClick","calculateOffset","pastSize","browserSize","currentSize","width","height","difference","componentDidMount","window","addEventListener","render"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react'\nimport CanvasTitle from '../components/canvas/CanvasTitle.js';\nimport CanvasMap from '../components/canvas/CanvasMap.js';\nimport CanvasInfo from '../components/canvas/CanvasInfo';\nimport PinContainer from './PinContainer';\n\n// All of our canvas components (title, map, info, input) & pin container called & manipulated here\nclass CanvasContainer extends PureComponent {\n\n  constructor(){\n    super()\n    this.state = {\n      canvasInfo: false,\n      capturedClick: [],\n      browserSize: {x: 1366, y: 768},\n      difference: {x: 0, y: 0}\n    }\n  }\n\n  componentDidMount(){\n    this.calculateOffset()\n    window.addEventListener(\"resize\", this.calculateOffset);\n  }\n\n  toggleInfo = (event) => {\n    event.preventDefault();\n    this.setState({canvasInfo: !this.state.canvasInfo})\n  }\n\n  handleMapClick = (event) => {\n    let element = document.getElementsByClassName(\"canvas-map\")[0];\n    let rect = element.getBoundingClientRect();\n    let x = event.clientX;\n    let y = event.clientY;\n    console.log({capturedClick: [x, y]})\n    this.setState({ capturedClick: [x, y] })\n  }\n\n  calculateOffset = () => {\n    let pastSize = this.state.browserSize\n    let element = document.getElementsByClassName(\"canvas-map\")[0];\n    let rect = element.getBoundingClientRect();\n    let currentSize = {x: rect.width, y: rect.height};\n    let difference = {x: pastSize.x-currentSize.x, y: pastSize.y-currentSize.y}\n    console.log({browserSize: currentSize, pastSize, difference})\n    this.setState({ browserSize: currentSize, difference: difference })\n  }\n\n  render() {\n    return (\n      <div className=\"canvas-container\">\n          <CanvasTitle title={\"ten characters\"} id={11111} />\n          <CanvasMap url={null} handleMapClick={this.handleMapClick} />\n          <button id=\"canvas-info\" onClick={this.toggleInfo} alt=\"info\"><i className=\"material-icons\">info</i></button>\n          {!!this.state.canvasInfo ? <CanvasInfo /> : null }\n          <PinContainer capturedClick={this.state.capturedClick} difference={this.state.difference} browserSize={this.state.browserSize} />\n      </div>\n    )\n  }\n}\n\nexport default CanvasContainer;\n"]},"metadata":{},"sourceType":"module"}