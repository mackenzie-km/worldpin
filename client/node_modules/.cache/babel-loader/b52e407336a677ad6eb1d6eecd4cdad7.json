{"ast":null,"code":"var _jsxFileName = \"/Users/Mackenzie/worldpin/src/containers/PinContainer.js\";\nimport React, { PureComponent } from 'react';\nimport PinAdd from '../components/pins/PinAdd.js';\nimport PinEdit from '../components/pins/PinEdit.js';\nimport PinControls from '../components/pins/PinControls.js';\nimport PinList from '../components/pins/PinList.js';\nimport { connect } from 'react-redux'; // Handles all of the pin logic and display\n\nclass PinContainer extends PureComponent {\n  constructor() {\n    super();\n\n    this.togglePinAdd = event => {\n      let map = document.getElementById('root');\n      this.setState({\n        pinAdd: !this.state.pinAdd\n      });\n      !this.state.pinAdd ? map.style.cursor = \"crosshair\" : map.style.cursor = \"default\";\n    };\n\n    this.togglePinEdit = (id, event) => {\n      console.log(id);\n      let map = document.getElementById('root');\n      this.setState({\n        pinEdit: !this.state.pinEdit,\n        currentId: id\n      });\n      !this.state.pinEdit ? map.style.cursor = \"crosshair\" : map.style.cursor = \"default\";\n    };\n\n    this.toggleControls = event => {\n      event.preventDefault();\n      this.setState({\n        pinControls: !this.state.pinControls\n      });\n    };\n\n    this.viewButton = () => {\n      console.log(\"view\");\n    };\n\n    this.handleSubmit = (event, data) => {\n      event.preventDefault();\n      data.location = this.props.capturedClick;\n      this.props.createPin(data);\n      this.togglePinAdd();\n    };\n\n    this.handleEdit = (event, data) => {\n      event.preventDefault();\n      data.location = this.props.capturedClick;\n      this.props.editPin(data);\n      this.togglePinEdit();\n    };\n\n    this.state = {\n      pinAdd: false,\n      pinControls: false,\n      pinEdit: false,\n      currentId: null\n    };\n  }\n\n  render() {\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, !!this.state.pinControls ? React.createElement(PinControls, {\n      addButton: this.togglePinAdd,\n      viewButton: this.viewButton,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }) : null, !!this.state.pinAdd ? React.createElement(PinAdd, {\n      id: null,\n      handleSubmit: this.handleSubmit,\n      hide: this.togglePinAdd,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }) : null, !!this.state.pinEdit ? React.createElement(PinEdit, {\n      id: this.state.currentId,\n      handleSubmit: this.handleEdit,\n      hide: this.togglePinEdit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }) : null, React.createElement(PinList, {\n      browserSize: this.props.browserSize,\n      editButton: this.togglePinEdit,\n      pins: this.props.pins,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      id: \"pin-controls-toggle\",\n      onClick: this.toggleControls,\n      alt: \"more\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"material-icons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"settings\")));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    pins: state\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    createPin: data => {\n      dispatch({\n        type: 'CREATE_PIN',\n        data\n      });\n    },\n    deletePin: data => {\n      dispatch({\n        type: 'DELETE_PIN',\n        data\n      });\n    },\n    editPin: data => {\n      dispatch({\n        type: 'EDIT_PIN',\n        data\n      });\n    },\n    filterPins: () => {\n      dispatch();\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PinContainer);","map":{"version":3,"sources":["/Users/Mackenzie/worldpin/src/containers/PinContainer.js"],"names":["React","PureComponent","PinAdd","PinEdit","PinControls","PinList","connect","PinContainer","constructor","togglePinAdd","event","map","document","getElementById","setState","pinAdd","state","style","cursor","togglePinEdit","id","console","log","pinEdit","currentId","toggleControls","preventDefault","pinControls","viewButton","handleSubmit","data","location","props","capturedClick","createPin","handleEdit","editPin","render","browserSize","pins","mapStateToProps","mapDispatchToProps","dispatch","type","deletePin","filterPins"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react'\nimport PinAdd from '../components/pins/PinAdd.js';\nimport PinEdit from '../components/pins/PinEdit.js';\nimport PinControls from '../components/pins/PinControls.js';\nimport PinList from '../components/pins/PinList.js';\nimport { connect } from 'react-redux';\n\n// Handles all of the pin logic and display\n\nclass PinContainer extends PureComponent {\n\nconstructor(){\n  super()\n  this.state = {\n    pinAdd: false,\n    pinControls: false,\n    pinEdit: false,\n    currentId: null\n  }\n}\n\ntogglePinAdd = (event) => {\n  let map = document.getElementById('root')\n  this.setState({pinAdd: !this.state.pinAdd})\n  !this.state.pinAdd ? map.style.cursor=\"crosshair\" : map.style.cursor=\"default\";\n}\n\ntogglePinEdit = (id, event) => {\n  console.log(id)\n  let map = document.getElementById('root')\n  this.setState({pinEdit: !this.state.pinEdit, currentId: id})\n  !this.state.pinEdit ? map.style.cursor=\"crosshair\" : map.style.cursor=\"default\";\n}\n\ntoggleControls = (event) => {\n  event.preventDefault();\n  this.setState({pinControls: !this.state.pinControls})\n}\n\nviewButton = () => {\n  console.log(\"view\")\n}\n\nhandleSubmit = (event, data) => {\n  event.preventDefault()\n  data.location = this.props.capturedClick\n  this.props.createPin(data)\n  this.togglePinAdd()\n}\n\nhandleEdit = (event, data) => {\n  event.preventDefault()\n  data.location = this.props.capturedClick\n  this.props.editPin(data)\n  this.togglePinEdit()\n}\n\n  render() {\n    return (\n      <React.Fragment>\n          {!!this.state.pinControls ? <PinControls addButton={this.togglePinAdd} viewButton={this.viewButton} /> : null }\n          {!!this.state.pinAdd ? <PinAdd id={null} handleSubmit={this.handleSubmit} hide={this.togglePinAdd} /> : null}\n          {!!this.state.pinEdit ? <PinEdit id={this.state.currentId} handleSubmit={this.handleEdit} hide={this.togglePinEdit} /> : null}\n          <PinList browserSize={this.props.browserSize} editButton={this.togglePinEdit} pins={this.props.pins} />\n          <button id=\"pin-controls-toggle\" onClick={this.toggleControls} alt=\"more\"><i className=\"material-icons\">settings</i></button>\n      </React.Fragment>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return { pins: state }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    createPin: (data) => {dispatch({type: 'CREATE_PIN', data})},\n    deletePin: (data) => {dispatch({type: 'DELETE_PIN', data})},\n    editPin: (data) => {dispatch({type: 'EDIT_PIN', data})},\n    filterPins: () => {dispatch()}\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PinContainer);\n"]},"metadata":{},"sourceType":"module"}