{"ast":null,"code":"var _jsxFileName = \"/Users/Mackenzie/worldpin/client/src/containers/PinContainer.js\";\nimport React, { PureComponent } from 'react';\nimport PinInput from '../components/pins/PinInput.js';\nimport PinControls from '../components/pins/PinControls.js';\nimport PinList from '../components/pins/PinList.js';\nimport ColorFilter from '../components/canvas/ColorFilter.js';\nimport { connect } from 'react-redux';\nimport { Route } from 'react-router-dom'; // Handles all of the pin logic and display\n\nclass PinContainer extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.togglePinInput = (pinData = null) => {\n      let map = document.getElementById('root');\n      !this.state.pinInput ? window.location = \"/maps/\".concat(this.props.id, \"/pins/\").concat(this.state.currentPin.id, \"/edit\") : window.location = \"/maps/\".concat(this.props.id);\n      this.setState({\n        pinInput: !this.state.pinInput,\n        currentPin: pinData\n      });\n      !!this.state.pinInput ? map.style.cursor = \"default\" : map.style.cursor = \"crosshair\";\n    };\n\n    this.toggleControls = event => {\n      event.preventDefault();\n      this.setState({\n        pinControls: !this.state.pinControls\n      });\n    };\n\n    this.filterByColor = color => {\n      let data = {\n        type: 'SHOW_PINS_BY_COLOR',\n        criteria: color\n      };\n      this.props.setFilter(data);\n    };\n\n    this.toggleColorFilter = event => {\n      event.preventDefault();\n\n      if (this.state.colorFilter) {\n        this.props.setFilter({\n          type: 'SHOW_ALL',\n          criteria: null\n        });\n      }\n\n      this.setState({\n        colorFilter: !this.state.colorFilter\n      });\n    };\n\n    this.handleSubmit = (event, data) => {\n      event.preventDefault();\n      data.x = this.props.capturedClick[0];\n      data.y = this.props.capturedClick[1];\n      this.props.createPin(data, this.props.id);\n      this.togglePinInput(null);\n    };\n\n    this.handleEdit = (event, data) => {\n      event.preventDefault();\n      data.x = this.props.capturedClick[0];\n      data.y = this.props.capturedClick[1];\n      this.props.editPin(data);\n      this.togglePinInput(null);\n    };\n\n    this.deletePin = id => {\n      this.props.deletePin(this.props.id, id);\n    };\n\n    this.state = {\n      pinInput: false,\n      pinControls: false,\n      colorFilter: false,\n      currentPin: {}\n    };\n  }\n\n  render() {\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, !!this.state.pinControls ? React.createElement(PinControls, {\n      togglePinInput: this.togglePinInput,\n      toggleColorFilter: this.toggleColorFilter,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }) : null, !!this.state.pinInput ? React.createElement(PinInput, {\n      currentPin: this.state.currentPin,\n      handleSubmit: this.handleSubmit,\n      handleEdit: this.handleEdit,\n      hide: this.togglePinInput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }) : null, React.createElement(PinList, {\n      browserSize: this.props.browserSize,\n      togglePinInput: this.togglePinInput,\n      pins: this.props.pins,\n      delete: this.deletePin,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }), !!this.state.colorFilter ? React.createElement(ColorFilter, {\n      filterByColor: this.filterByColor,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }) : null, React.createElement(\"button\", {\n      id: \"pin-controls-toggle\",\n      onClick: this.toggleControls,\n      alt: \"more\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"material-icons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"settings\")));\n  }\n\n}\n\nconst getVisiblePins = (pins = [], data) => {\n  switch (data.type) {\n    case 'SHOW_ALL':\n      return pins;\n\n    case 'SHOW_PIN_BY_ID':\n      return pins.filter(x => x.id === data.criteria);\n\n    case 'SHOW_PINS_BY_COLOR':\n      return pins.filter(x => x.color === data.criteria);\n\n    default:\n      return pins;\n  }\n};\n\nconst mapStateToProps = state => {\n  return {\n    pins: getVisiblePins(state.pinReducer.pins, state.filterReducer)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    loadPins: id => dispatch({\n      type: 'LOAD_PINS',\n      id\n    }),\n    createPin: (data, id) => {\n      dispatch({\n        type: 'CREATING_PIN'\n      });\n      fetch(\"/maps/\".concat(id, \"/pins\"), {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data)\n      }).then(res => res.json()).then(data => dispatch({\n        type: 'CREATE_PIN',\n        data\n      }));\n    },\n    deletePin: (map_id, id) => {\n      dispatch({\n        type: 'DELETING_PIN'\n      });\n      fetch(\"/maps/\".concat(map_id, \"/pins/\").concat(id), {\n        method: 'DELETE',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        }\n      }).then(res => res.json()).then(data => dispatch({\n        type: 'DELETE_PIN',\n        data\n      }));\n    },\n    editPin: data => {\n      dispatch({\n        type: 'EDITING_PIN'\n      });\n      fetch(\"/pins/\".concat(data.id), {\n        method: 'PATCH',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data)\n      }).then(res => res.json()).then(data => dispatch({\n        type: 'EDIT_PIN',\n        data\n      }));\n    },\n    setFilter: data => {\n      dispatch({\n        type: data.type,\n        criteria: data.criteria\n      });\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PinContainer);","map":{"version":3,"sources":["/Users/Mackenzie/worldpin/client/src/containers/PinContainer.js"],"names":["React","PureComponent","PinInput","PinControls","PinList","ColorFilter","connect","Route","PinContainer","constructor","props","togglePinInput","pinData","map","document","getElementById","state","pinInput","window","location","id","currentPin","setState","style","cursor","toggleControls","event","preventDefault","pinControls","filterByColor","color","data","type","criteria","setFilter","toggleColorFilter","colorFilter","handleSubmit","x","capturedClick","y","createPin","handleEdit","editPin","deletePin","render","browserSize","pins","getVisiblePins","filter","mapStateToProps","pinReducer","filterReducer","mapDispatchToProps","dispatch","loadPins","fetch","method","headers","body","JSON","stringify","then","res","json","map_id"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react'\nimport PinInput from '../components/pins/PinInput.js';\nimport PinControls from '../components/pins/PinControls.js';\nimport PinList from '../components/pins/PinList.js';\nimport ColorFilter from '../components/canvas/ColorFilter.js'\nimport { connect } from 'react-redux';\nimport{ Route } from 'react-router-dom';\n\n// Handles all of the pin logic and display\n\nclass PinContainer extends PureComponent {\n\nconstructor(props){\n  super(props)\n  this.state = {\n    pinInput: false,\n    pinControls: false,\n    colorFilter: false,\n    currentPin: {}\n  }\n}\n\ntogglePinInput = (pinData = null) => {\n  let map = document.getElementById('root')\n  !this.state.pinInput ?\n    window.location = `/maps/${this.props.id}/pins/${this.state.currentPin.id}/edit`\n    : window.location = `/maps/${this.props.id}`\n  this.setState({pinInput: !this.state.pinInput, currentPin: pinData})\n  !!this.state.pinInput ? map.style.cursor=\"default\" : map.style.cursor=\"crosshair\";\n}\n\ntoggleControls = (event) => {\n  event.preventDefault();\n  this.setState({pinControls: !this.state.pinControls})\n}\n\nfilterByColor = (color) => {\n  let data = {type: 'SHOW_PINS_BY_COLOR', criteria: color}\n  this.props.setFilter(data);\n}\n\ntoggleColorFilter = (event) => {\n  event.preventDefault();\n  if (this.state.colorFilter) {this.props.setFilter({type: 'SHOW_ALL', criteria: null})}\n  this.setState({colorFilter: !this.state.colorFilter})\n}\n\nhandleSubmit = (event, data) => {\n  event.preventDefault()\n  data.x = this.props.capturedClick[0]\n  data.y = this.props.capturedClick[1]\n  this.props.createPin(data, this.props.id)\n  this.togglePinInput(null)\n}\n\nhandleEdit = (event, data) => {\n  event.preventDefault()\n  data.x = this.props.capturedClick[0]\n  data.y = this.props.capturedClick[1]\n  this.props.editPin(data)\n  this.togglePinInput(null)\n}\n\ndeletePin = (id) => {\n  this.props.deletePin(this.props.id, id)\n}\n\n  render() {\n    return (\n      <React.Fragment>\n          {!!this.state.pinControls\n            ? <PinControls\n              togglePinInput={this.togglePinInput}\n              toggleColorFilter={this.toggleColorFilter} />\n            : null }\n          {!!this.state.pinInput\n            ? <PinInput\n              currentPin={this.state.currentPin}\n                handleSubmit={this.handleSubmit}\n                handleEdit={this.handleEdit}\n                hide={this.togglePinInput} />\n            : null}\n          {<PinList\n            browserSize={this.props.browserSize}\n            togglePinInput={this.togglePinInput}\n            pins={this.props.pins}\n            delete={this.deletePin} />}\n          {!!this.state.colorFilter\n            ? <ColorFilter filterByColor={this.filterByColor} />\n            : null}\n          <button id=\"pin-controls-toggle\"\n            onClick={this.toggleControls}\n            alt=\"more\">\n            <i className=\"material-icons\">settings</i>\n          </button>\n      </React.Fragment>\n    )\n  }\n}\n\nconst getVisiblePins = (pins = [], data) => {\n  switch (data.type) {\n    case 'SHOW_ALL':\n      return pins;\n    case 'SHOW_PIN_BY_ID':\n      return pins.filter(x => x.id === data.criteria);\n    case 'SHOW_PINS_BY_COLOR':\n      return pins.filter(x => x.color === data.criteria);\n    default:\n      return pins\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return { pins: getVisiblePins(state.pinReducer.pins, state.filterReducer) }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    loadPins: (id) => dispatch({type: 'LOAD_PINS', id}),\n    createPin: (data, id) => {\n      dispatch ({type: 'CREATING_PIN'});\n      fetch(`/maps/${id}/pins`, {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data)\n      })\n      .then(res => res.json())\n      .then(data => dispatch({type: 'CREATE_PIN', data}));\n    },\n    deletePin: (map_id, id) => {\n      dispatch ({type: 'DELETING_PIN'});\n      fetch(`/maps/${map_id}/pins/${id}`, {\n        method: 'DELETE',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n          }\n        })\n      .then(res => res.json())\n      .then(data => dispatch({type: 'DELETE_PIN', data}));\n    },\n    editPin: (data) => {\n      dispatch ({type: 'EDITING_PIN'});\n      fetch(`/pins/${data.id}`, {\n        method: 'PATCH',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data)\n      })\n    .then(res => res.json())\n    .then(data => dispatch({type: 'EDIT_PIN', data}))\n  },\n    setFilter: (data) => {dispatch({type: data.type, criteria: data.criteria})}\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PinContainer);\n"]},"metadata":{},"sourceType":"module"}