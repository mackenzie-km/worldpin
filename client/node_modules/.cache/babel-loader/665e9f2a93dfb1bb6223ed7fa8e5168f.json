{"ast":null,"code":"var _jsxFileName = \"/Users/Mackenzie/worldpin/client/src/containers/PinContainer.js\";\nimport React, { PureComponent } from 'react';\nimport PinInput from '../components/pins/PinInput.js';\nimport PinControls from '../components/pins/PinControls.js';\nimport PinList from '../components/pins/PinList.js';\nimport ColorFilter from '../components/canvas/ColorFilter.js';\nimport CanvasTitle from '../components/canvas/CanvasTitle.js';\nimport CanvasMap from '../components/canvas/CanvasMap.js';\nimport CanvasInfo from '../components/canvas/CanvasInfo';\nimport { fetchMapInfo, createPin, deletePin, editPin, setFilter } from '../actions/api.js';\nimport { connect } from 'react-redux';\nimport { Route } from 'react-router-dom'; // Handles all of the pin logic and display\n\nclass PinContainer extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.toggleInfo = event => {\n      event.preventDefault();\n      this.setState({\n        canvasInfo: !this.state.canvasInfo\n      });\n    };\n\n    this.handleMapClick = event => {\n      let x = event.clientX;\n      let y = event.clientY;\n      console.log({\n        capturedClick: [x, y]\n      });\n      this.setState({\n        capturedClick: [x, y]\n      });\n    };\n\n    this.calculateOffset = () => {\n      let element = document.getElementsByClassName(\"canvas-map\")[0];\n      let rect = element.getBoundingClientRect();\n      let currentSize = {\n        x: rect.width,\n        y: rect.height\n      };\n      this.setState({\n        browserSize: currentSize\n      });\n    };\n\n    this.togglePinInput = (pinData = null) => {\n      let map = document.getElementById('root');\n      this.setState({\n        pinInput: !this.state.pinInput,\n        currentPin: pinData\n      });\n      !!this.state.pinInput ? map.style.cursor = \"default\" : map.style.cursor = \"crosshair\";\n    };\n\n    this.toggleControls = event => {\n      event.preventDefault();\n      this.setState({\n        pinControls: !this.state.pinControls\n      });\n    };\n\n    this.filterByColor = color => {\n      let data = {\n        type: 'SHOW_PINS_BY_COLOR',\n        criteria: color\n      };\n      this.props.setFilter(data);\n    };\n\n    this.toggleColorFilter = event => {\n      event.preventDefault();\n\n      if (this.state.colorFilter) {\n        this.props.setFilter({\n          type: 'SHOW_ALL',\n          criteria: null\n        });\n      }\n\n      this.setState({\n        colorFilter: !this.state.colorFilter\n      });\n    };\n\n    this.handleSubmit = (event, data) => {\n      event.preventDefault();\n      data.x = this.state.capturedClick[0];\n      data.y = this.state.capturedClick[1];\n      this.props.createPin(data, this.props.id);\n      this.togglePinInput(null);\n    };\n\n    this.handleEdit = (event, data) => {\n      event.preventDefault();\n      data.x = this.state.capturedClick[0];\n      data.y = this.state.capturedClick[1];\n      this.props.editPin(data);\n      this.togglePinInput(null);\n    };\n\n    this.deletePin = id => {\n      this.props.deletePin(this.props.id, id);\n    };\n\n    this.state = {\n      canvasId: props.id,\n      pinInput: false,\n      pinControls: false,\n      colorFilter: false,\n      canvasInfo: false,\n      currentPin: {},\n      capturedClick: [],\n      browserSize: {\n        x: 1366,\n        y: 768\n      }\n    };\n  }\n\n  componentDidMount() {\n    console.log(this.props.fetchMapInfo(this.state.canvasId));\n    this.props.fetchMapInfo(this.state.canvasId);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"canvas-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(CanvasTitle, {\n      title: \"ten characters\",\n      id: 11111,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }), React.createElement(CanvasMap, {\n      url: null,\n      handleMapClick: this.handleMapClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      id: \"canvas-info\",\n      onClick: this.toggleInfo,\n      alt: \"info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"material-icons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \"info\")), !!this.state.canvasInfo ? React.createElement(CanvasInfo, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }) : null, React.createElement(Route, {\n      path: \"/maps/\".concat(this.props.id, \"/new\"),\n      render: routerProps => React.createElement(PinInput, Object.assign({}, routerProps, {\n        currentPin: this.state.currentPin,\n        handleSubmit: this.handleSubmit,\n        handleEdit: this.handleEdit,\n        hide: this.togglePinInput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }), !!this.state.pinControls ? React.createElement(PinControls, {\n      togglePinInput: this.togglePinInput,\n      toggleColorFilter: this.toggleColorFilter,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }) : null, !!this.state.pinInput ? React.createElement(PinInput, {\n      currentPin: this.state.currentPin,\n      handleSubmit: this.handleSubmit,\n      handleEdit: this.handleEdit,\n      hide: this.togglePinInput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }) : null, React.createElement(PinList, {\n      canvasId: this.props.id,\n      browserSize: this.state.browserSize,\n      togglePinInput: this.togglePinInput,\n      pins: this.props.pins,\n      delete: this.deletePin,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }), !!this.state.colorFilter ? React.createElement(ColorFilter, {\n      filterByColor: this.filterByColor,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }) : null, React.createElement(\"button\", {\n      id: \"pin-controls-toggle\",\n      onClick: this.toggleControls,\n      alt: \"more\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"material-icons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, \"settings\")));\n  }\n\n}\n\nconst getVisiblePins = (pins = [], data) => {\n  switch (data.type) {\n    case 'SHOW_ALL':\n      return pins;\n\n    case 'SHOW_PIN_BY_ID':\n      return pins.filter(x => x.id === data.criteria);\n\n    case 'SHOW_PINS_BY_COLOR':\n      return pins.filter(x => x.color === data.criteria);\n\n    default:\n      return pins;\n  }\n};\n\nconst mapStateToProps = state => {\n  return {\n    pins: getVisiblePins(state.pinReducer.pins, state.filterReducer)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchMapInfo: id => dispatch(fetchMapInfo(id)),\n    createPin: (data, id) => dispatch(createPin(data, id)),\n    deletePin: (map_id, id) => dispatch(deletePin(map_id, id)),\n    editPin: data => dispatch(editPin(data)),\n    setFilter: data => dispatch(deletePin(data))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PinContainer);","map":{"version":3,"sources":["/Users/Mackenzie/worldpin/client/src/containers/PinContainer.js"],"names":["React","PureComponent","PinInput","PinControls","PinList","ColorFilter","CanvasTitle","CanvasMap","CanvasInfo","fetchMapInfo","createPin","deletePin","editPin","setFilter","connect","Route","PinContainer","constructor","props","toggleInfo","event","preventDefault","setState","canvasInfo","state","handleMapClick","x","clientX","y","clientY","console","log","capturedClick","calculateOffset","element","document","getElementsByClassName","rect","getBoundingClientRect","currentSize","width","height","browserSize","togglePinInput","pinData","map","getElementById","pinInput","currentPin","style","cursor","toggleControls","pinControls","filterByColor","color","data","type","criteria","toggleColorFilter","colorFilter","handleSubmit","id","handleEdit","canvasId","componentDidMount","render","routerProps","pins","getVisiblePins","filter","mapStateToProps","pinReducer","filterReducer","mapDispatchToProps","dispatch","map_id"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react'\nimport PinInput from '../components/pins/PinInput.js';\nimport PinControls from '../components/pins/PinControls.js';\nimport PinList from '../components/pins/PinList.js';\nimport ColorFilter from '../components/canvas/ColorFilter.js';\nimport CanvasTitle from '../components/canvas/CanvasTitle.js';\nimport CanvasMap from '../components/canvas/CanvasMap.js';\nimport CanvasInfo from '../components/canvas/CanvasInfo';\nimport {\n  fetchMapInfo,\n  createPin,\n  deletePin,\n  editPin,\n  setFilter } from '../actions/api.js';\nimport { connect } from 'react-redux';\nimport { Route } from 'react-router-dom';\n\n// Handles all of the pin logic and display\n\nclass PinContainer extends PureComponent {\n\nconstructor(props){\n  super(props)\n  this.state = {\n    canvasId: props.id,\n    pinInput: false,\n    pinControls: false,\n    colorFilter: false,\n    canvasInfo: false,\n    currentPin: {},\n    capturedClick: [],\n    browserSize: {x: 1366, y: 768}\n  }\n}\n\ncomponentDidMount() {\n  console.log(this.props.fetchMapInfo(this.state.canvasId))\n  this.props.fetchMapInfo(this.state.canvasId)\n}\n\n\ntoggleInfo = (event) => {\n  event.preventDefault();\n  this.setState({canvasInfo: !this.state.canvasInfo})\n}\n\nhandleMapClick = (event) => {\n  let x = event.clientX;\n  let y = event.clientY;\n  console.log({capturedClick: [x, y]})\n  this.setState({ capturedClick: [x, y] })\n}\n\ncalculateOffset = () => {\n  let element = document.getElementsByClassName(\"canvas-map\")[0];\n  let rect = element.getBoundingClientRect();\n  let currentSize = {x: rect.width, y: rect.height};\n  this.setState({ browserSize: currentSize  })\n}\n\ntogglePinInput = (pinData = null) => {\n  let map = document.getElementById('root')\n  this.setState({pinInput: !this.state.pinInput, currentPin: pinData})\n  !!this.state.pinInput ? map.style.cursor=\"default\" : map.style.cursor=\"crosshair\";\n}\n\ntoggleControls = (event) => {\n  event.preventDefault();\n  this.setState({pinControls: !this.state.pinControls})\n}\n\nfilterByColor = (color) => {\n  let data = {type: 'SHOW_PINS_BY_COLOR', criteria: color}\n  this.props.setFilter(data);\n}\n\ntoggleColorFilter = (event) => {\n  event.preventDefault();\n  if (this.state.colorFilter) {this.props.setFilter({type: 'SHOW_ALL', criteria: null})}\n  this.setState({colorFilter: !this.state.colorFilter})\n}\n\nhandleSubmit = (event, data) => {\n  event.preventDefault()\n  data.x = this.state.capturedClick[0]\n  data.y = this.state.capturedClick[1]\n  this.props.createPin(data, this.props.id)\n  this.togglePinInput(null)\n}\n\nhandleEdit = (event, data) => {\n  event.preventDefault()\n  data.x = this.state.capturedClick[0]\n  data.y = this.state.capturedClick[1]\n  this.props.editPin(data)\n  this.togglePinInput(null)\n}\n\ndeletePin = (id) => {\n  this.props.deletePin(this.props.id, id)\n}\n\n  render() {\n    return (\n      <div className=\"canvas-container\">\n      <CanvasTitle title={\"ten characters\"} id={11111} />\n      <CanvasMap url={null} handleMapClick={this.handleMapClick} />\n      <button id=\"canvas-info\" onClick={this.toggleInfo} alt=\"info\"><i className=\"material-icons\">info</i></button>\n      {!!this.state.canvasInfo ? <CanvasInfo /> : null }\n        <Route path={`/maps/${this.props.id}/new`} render={routerProps => <PinInput {...routerProps} currentPin={this.state.currentPin}\n          handleSubmit={this.handleSubmit}\n          handleEdit={this.handleEdit}\n          hide={this.togglePinInput} /> }/>\n          {!!this.state.pinControls\n            ? <PinControls\n              togglePinInput={this.togglePinInput}\n              toggleColorFilter={this.toggleColorFilter} />\n            : null }\n          {!!this.state.pinInput\n            ? <PinInput\n              currentPin={this.state.currentPin}\n                handleSubmit={this.handleSubmit}\n                handleEdit={this.handleEdit}\n                hide={this.togglePinInput} />\n            : null}\n          {<PinList\n            canvasId={this.props.id}\n            browserSize={this.state.browserSize}\n            togglePinInput={this.togglePinInput}\n            pins={this.props.pins}\n            delete={this.deletePin} />}\n          {!!this.state.colorFilter\n            ? <ColorFilter filterByColor={this.filterByColor} />\n            : null}\n          <button id=\"pin-controls-toggle\"\n            onClick={this.toggleControls}\n            alt=\"more\">\n            <i className=\"material-icons\">settings</i>\n          </button>\n      </div>\n    )\n  }\n}\n\nconst getVisiblePins = (pins = [], data) => {\n  switch (data.type) {\n    case 'SHOW_ALL':\n      return pins;\n    case 'SHOW_PIN_BY_ID':\n      return pins.filter(x => x.id === data.criteria);\n    case 'SHOW_PINS_BY_COLOR':\n      return pins.filter(x => x.color === data.criteria);\n    default:\n      return pins\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return { pins: getVisiblePins(state.pinReducer.pins, state.filterReducer) }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    fetchMapInfo: (id) => dispatch(fetchMapInfo(id)),\n    createPin: (data, id) => dispatch(createPin(data, id)),\n    deletePin: (map_id, id) => dispatch(deletePin(map_id, id)),\n    editPin: (data) => dispatch(editPin(data)),\n    setFilter: (data) => dispatch(deletePin(data))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PinContainer);\n"]},"metadata":{},"sourceType":"module"}