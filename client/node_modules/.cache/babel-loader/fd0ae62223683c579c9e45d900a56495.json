{"ast":null,"code":"var _jsxFileName = \"/Users/Mackenzie/worldpin/src/containers/PinContainer.js\";\nimport React, { PureComponent } from 'react';\nimport PinInput from '../components/pins/PinInput.js';\nimport PinControls from '../components/pins/PinControls.js';\nimport PinList from '../components/pins/PinList.js';\nimport { connect } from 'react-redux'; // Handles all of the pin logic and display\n\nclass PinContainer extends PureComponent {\n  constructor() {\n    super();\n\n    this.togglePinInput = (event = null) => {\n      debugger;\n      let map = document.getElementById('root');\n      let id = !!event.target ? event.target.value || null : null;\n      this.setState({\n        pinInput: !this.state.PinInput,\n        currentId: id\n      });\n      !this.state.PinInput ? map.style.cursor = \"crosshair\" : map.style.cursor = \"default\";\n    };\n\n    this.toggleControls = event => {\n      event.preventDefault();\n      this.setState({\n        pinControls: !this.state.pinControls\n      });\n    };\n\n    this.viewButton = () => {\n      console.log(\"view\");\n    };\n\n    this.handleSubmit = (event, data) => {\n      event.preventDefault();\n      data.location = this.props.capturedClick;\n      this.props.createPin(data);\n      this.togglePinInput(null);\n    };\n\n    this.handleEdit = (event, data) => {\n      event.preventDefault();\n      data.location = this.props.capturedClick;\n      this.props.editPin(data);\n      this.togglePinInput(null);\n      this.setState({\n        currentId: null\n      });\n    };\n\n    this.state = {\n      pinInput: false,\n      pinControls: false,\n      currentId: null\n    };\n  }\n\n  render() {\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, !!this.state.pinControls ? React.createElement(PinControls, {\n      togglePinInput: this.togglePinInput,\n      viewButton: this.viewButton,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }) : null, !!this.state.PinInput ? React.createElement(PinInput, {\n      pin: this.state.currentId !== null ? this.props.viewPins({\n        id: this.state.currentId\n      }) : null,\n      handleSubmit: this.handleSubmit,\n      handleEdit: this.handleEdit,\n      hide: this.togglePinInput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }) : null, React.createElement(PinList, {\n      browserSize: this.props.browserSize,\n      togglePinInput: this.togglePinInput,\n      pins: this.props.pins,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      id: \"pin-controls-toggle\",\n      onClick: this.toggleControls,\n      alt: \"more\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"material-icons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"settings\")));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    pins: state\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    createPin: data => {\n      dispatch({\n        type: 'CREATE_PIN',\n        data\n      });\n    },\n    deletePin: data => {\n      dispatch({\n        type: 'DELETE_PIN',\n        data\n      });\n    },\n    editPin: data => {\n      dispatch({\n        type: 'EDIT_PIN',\n        data\n      });\n    },\n    viewPins: data => {\n      dispatch({\n        type: 'VIEW_PINS',\n        data\n      });\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PinContainer);","map":{"version":3,"sources":["/Users/Mackenzie/worldpin/src/containers/PinContainer.js"],"names":["React","PureComponent","PinInput","PinControls","PinList","connect","PinContainer","constructor","togglePinInput","event","map","document","getElementById","id","target","value","setState","pinInput","state","currentId","style","cursor","toggleControls","preventDefault","pinControls","viewButton","console","log","handleSubmit","data","location","props","capturedClick","createPin","handleEdit","editPin","render","viewPins","browserSize","pins","mapStateToProps","mapDispatchToProps","dispatch","type","deletePin"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react'\nimport PinInput from '../components/pins/PinInput.js';\nimport PinControls from '../components/pins/PinControls.js';\nimport PinList from '../components/pins/PinList.js';\nimport { connect } from 'react-redux';\n\n// Handles all of the pin logic and display\n\nclass PinContainer extends PureComponent {\n\nconstructor(){\n  super()\n  this.state = {\n    pinInput: false,\n    pinControls: false,\n    currentId: null\n  }\n}\n\ntogglePinInput = (event = null) => {\n  debugger\n  let map = document.getElementById('root')\n  let id = (!!event.target ? event.target.value || null : null)\n  this.setState({pinInput: !this.state.PinInput, currentId: id})\n  !this.state.PinInput ? map.style.cursor=\"crosshair\" : map.style.cursor=\"default\";\n}\ntoggleControls = (event) => {\n  event.preventDefault();\n  this.setState({pinControls: !this.state.pinControls})\n}\n\nviewButton = () => {\n  console.log(\"view\")\n}\n\nhandleSubmit = (event, data) => {\n  event.preventDefault()\n  data.location = this.props.capturedClick\n  this.props.createPin(data)\n  this.togglePinInput(null)\n}\n\nhandleEdit = (event, data) => {\n  event.preventDefault()\n  data.location = this.props.capturedClick\n  this.props.editPin(data)\n  this.togglePinInput(null)\n  this.setState({currentId: null})\n}\n\n  render() {\n    return (\n      <React.Fragment>\n          {!!this.state.pinControls ? <PinControls togglePinInput={this.togglePinInput} viewButton={this.viewButton} /> : null }\n          {!!this.state.PinInput\n            ? <PinInput\n                pin={(this.state.currentId !== null) ? this.props.viewPins({id: this.state.currentId}) : null }\n                handleSubmit={this.handleSubmit}\n                handleEdit={this.handleEdit}\n                hide={this.togglePinInput} />\n            : null}\n          {<PinList browserSize={this.props.browserSize} togglePinInput={this.togglePinInput} pins={this.props.pins} />}\n          <button id=\"pin-controls-toggle\" onClick={this.toggleControls} alt=\"more\"><i className=\"material-icons\">settings</i></button>\n      </React.Fragment>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return { pins: state }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    createPin: (data) => {dispatch({type: 'CREATE_PIN', data})},\n    deletePin: (data) => {dispatch({type: 'DELETE_PIN', data})},\n    editPin: (data) => {dispatch({type: 'EDIT_PIN', data})},\n    viewPins: (data) => {dispatch({type: 'VIEW_PINS', data})}\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PinContainer);\n"]},"metadata":{},"sourceType":"module"}