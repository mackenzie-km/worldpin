{"ast":null,"code":"var _jsxFileName = \"/Users/Mackenzie/worldpin/client/src/containers/PinContainer.js\";\nimport React, { PureComponent } from 'react';\nimport PinInput from '../components/pins/PinInput.js';\nimport PinControls from '../components/pins/PinControls.js';\nimport PinList from '../components/pins/PinList.js';\nimport ColorFilter from '../components/canvas/ColorFilter.js';\nimport CanvasTitle from '../components/canvas/CanvasTitle.js';\nimport CanvasMap from '../components/canvas/CanvasMap.js';\nimport CanvasInfo from '../components/canvas/CanvasInfo';\nimport Helpers from '../helpers/containerHelpers.js';\nimport { connect } from 'react-redux';\nimport { Route } from 'react-router-dom'; // Handles all of the pin logic and display\n\nclass PinContainer extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      canvasId: props.id,\n      pinInput: false,\n      pinControls: false,\n      colorFilter: false,\n      canvasInfo: false,\n      currentPin: {},\n      capturedClick: [],\n      browserSize: {\n        x: 1366,\n        y: 768\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.props.fetchMapInfo(this.state.canvasId);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"canvas-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(CanvasTitle, {\n      title: \"ten characters\",\n      id: 11111,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }), React.createElement(CanvasMap, {\n      url: null,\n      handleMapClick: this.handleMapClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      id: \"canvas-info\",\n      onClick: this.toggleInfo,\n      alt: \"info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"material-icons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, \"info\")), !!this.state.canvasInfo ? React.createElement(CanvasInfo, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }) : null, React.createElement(Route, {\n      path: \"/maps/\".concat(this.props.id, \"/new\"),\n      render: routerProps => React.createElement(PinInput, Object.assign({}, routerProps, {\n        currentPin: this.state.currentPin,\n        handleSubmit: this.handleSubmit,\n        handleEdit: this.handleEdit,\n        hide: this.togglePinInput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }), !!this.state.pinControls ? React.createElement(PinControls, {\n      togglePinInput: this.togglePinInput,\n      toggleColorFilter: this.toggleColorFilter,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }) : null, !!this.state.pinInput ? React.createElement(PinInput, {\n      currentPin: this.state.currentPin,\n      handleSubmit: this.handleSubmit,\n      handleEdit: this.handleEdit,\n      hide: this.togglePinInput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }) : null, React.createElement(PinList, {\n      canvasId: this.props.id,\n      browserSize: this.state.browserSize,\n      togglePinInput: this.togglePinInput,\n      pins: this.props.pins,\n      delete: this.deletePin,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }), !!this.state.colorFilter ? React.createElement(ColorFilter, {\n      filterByColor: this.filterByColor,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }) : null, React.createElement(\"button\", {\n      id: \"pin-controls-toggle\",\n      onClick: this.toggleControls,\n      alt: \"more\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"material-icons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"settings\")));\n  }\n\n}\n\nconst getVisiblePins = (pins = [], data) => {\n  switch (data.type) {\n    case 'SHOW_ALL':\n      return pins;\n\n    case 'SHOW_PIN_BY_ID':\n      return pins.filter(x => x.id === data.criteria);\n\n    case 'SHOW_PINS_BY_COLOR':\n      return pins.filter(x => x.color === data.criteria);\n\n    default:\n      return pins;\n  }\n};\n\nconst mapStateToProps = state => {\n  return {\n    pins: getVisiblePins(state.pinReducer.pins, state.filterReducer)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchMapInfo: id => {\n      dispatch({\n        type: 'LOADING_MAP'\n      });\n      fetch(\"/maps/\".concat(id)).then(res => res.json()).then(json => dispatch({\n        type: 'LOAD_PINS',\n        json\n      }));\n    },\n    createPin: (data, id) => {\n      dispatch({\n        type: 'CREATING_PIN'\n      });\n      fetch(\"/maps/\".concat(id, \"/pins\"), {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data)\n      }).then(res => res.json()).then(data => dispatch({\n        type: 'CREATE_PIN',\n        data\n      }));\n    },\n    deletePin: (map_id, id) => {\n      dispatch({\n        type: 'DELETING_PIN'\n      });\n      fetch(\"/maps/\".concat(map_id, \"/pins/\").concat(id), {\n        method: 'DELETE',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        }\n      }).then(res => res.json()).then(data => dispatch({\n        type: 'DELETE_PIN',\n        data\n      }));\n    },\n    editPin: data => {\n      dispatch({\n        type: 'EDITING_PIN'\n      });\n      fetch(\"/pins/\".concat(data.id), {\n        method: 'PATCH',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data)\n      }).then(res => res.json()).then(data => dispatch({\n        type: 'EDIT_PIN',\n        data\n      }));\n    },\n    setFilter: data => {\n      dispatch({\n        type: data.type,\n        criteria: data.criteria\n      });\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PinContainer);","map":{"version":3,"sources":["/Users/Mackenzie/worldpin/client/src/containers/PinContainer.js"],"names":["React","PureComponent","PinInput","PinControls","PinList","ColorFilter","CanvasTitle","CanvasMap","CanvasInfo","Helpers","connect","Route","PinContainer","constructor","props","state","canvasId","id","pinInput","pinControls","colorFilter","canvasInfo","currentPin","capturedClick","browserSize","x","y","componentDidMount","fetchMapInfo","render","handleMapClick","toggleInfo","routerProps","handleSubmit","handleEdit","togglePinInput","toggleColorFilter","pins","deletePin","filterByColor","toggleControls","getVisiblePins","data","type","filter","criteria","color","mapStateToProps","pinReducer","filterReducer","mapDispatchToProps","dispatch","fetch","then","res","json","createPin","method","headers","body","JSON","stringify","map_id","editPin","setFilter"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react'\nimport PinInput from '../components/pins/PinInput.js';\nimport PinControls from '../components/pins/PinControls.js';\nimport PinList from '../components/pins/PinList.js';\nimport ColorFilter from '../components/canvas/ColorFilter.js';\nimport CanvasTitle from '../components/canvas/CanvasTitle.js';\nimport CanvasMap from '../components/canvas/CanvasMap.js';\nimport CanvasInfo from '../components/canvas/CanvasInfo';\nimport Helpers from '../helpers/containerHelpers.js';\nimport { connect } from 'react-redux';\nimport { Route } from 'react-router-dom';\n\n// Handles all of the pin logic and display\n\nclass PinContainer extends PureComponent {\n\nconstructor(props){\n  super(props)\n  this.state = {\n    canvasId: props.id,\n    pinInput: false,\n    pinControls: false,\n    colorFilter: false,\n    canvasInfo: false,\n    currentPin: {},\n    capturedClick: [],\n    browserSize: {x: 1366, y: 768}\n  }\n}\n\ncomponentDidMount() {\n  this.props.fetchMapInfo(this.state.canvasId)\n}\n\n\n\n\n  render() {\n    return (\n      <div className=\"canvas-container\">\n      <CanvasTitle title={\"ten characters\"} id={11111} />\n      <CanvasMap url={null} handleMapClick={this.handleMapClick} />\n      <button id=\"canvas-info\" onClick={this.toggleInfo} alt=\"info\"><i className=\"material-icons\">info</i></button>\n      {!!this.state.canvasInfo ? <CanvasInfo /> : null }\n        <Route path={`/maps/${this.props.id}/new`} render={routerProps => <PinInput {...routerProps} currentPin={this.state.currentPin}\n          handleSubmit={this.handleSubmit}\n          handleEdit={this.handleEdit}\n          hide={this.togglePinInput} /> }/>\n          {!!this.state.pinControls\n            ? <PinControls\n              togglePinInput={this.togglePinInput}\n              toggleColorFilter={this.toggleColorFilter} />\n            : null }\n          {!!this.state.pinInput\n            ? <PinInput\n              currentPin={this.state.currentPin}\n                handleSubmit={this.handleSubmit}\n                handleEdit={this.handleEdit}\n                hide={this.togglePinInput} />\n            : null}\n          {<PinList\n            canvasId={this.props.id}\n            browserSize={this.state.browserSize}\n            togglePinInput={this.togglePinInput}\n            pins={this.props.pins}\n            delete={this.deletePin} />}\n          {!!this.state.colorFilter\n            ? <ColorFilter filterByColor={this.filterByColor} />\n            : null}\n          <button id=\"pin-controls-toggle\"\n            onClick={this.toggleControls}\n            alt=\"more\">\n            <i className=\"material-icons\">settings</i>\n          </button>\n      </div>\n    )\n  }\n}\n\nconst getVisiblePins = (pins = [], data) => {\n  switch (data.type) {\n    case 'SHOW_ALL':\n      return pins;\n    case 'SHOW_PIN_BY_ID':\n      return pins.filter(x => x.id === data.criteria);\n    case 'SHOW_PINS_BY_COLOR':\n      return pins.filter(x => x.color === data.criteria);\n    default:\n      return pins\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return { pins: getVisiblePins(state.pinReducer.pins, state.filterReducer) }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    fetchMapInfo: (id) => {\n      dispatch ({type: 'LOADING_MAP'});\n      fetch(`/maps/${id}`)\n      .then(res => res.json())\n      .then(json => dispatch({type: 'LOAD_PINS', json}))\n    },\n    createPin: (data, id) => {\n      dispatch ({type: 'CREATING_PIN'});\n      fetch(`/maps/${id}/pins`, {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data)\n      })\n      .then(res => res.json())\n      .then(data => dispatch({type: 'CREATE_PIN', data}));\n    },\n    deletePin: (map_id, id) => {\n      dispatch ({type: 'DELETING_PIN'});\n      fetch(`/maps/${map_id}/pins/${id}`, {\n        method: 'DELETE',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n          }\n        })\n      .then(res => res.json())\n      .then(data => dispatch({type: 'DELETE_PIN', data}));\n    },\n    editPin: (data) => {\n      dispatch ({type: 'EDITING_PIN'});\n      fetch(`/pins/${data.id}`, {\n        method: 'PATCH',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data)\n      })\n    .then(res => res.json())\n    .then(data => dispatch({type: 'EDIT_PIN', data}))\n  },\n    setFilter: (data) => {dispatch({type: data.type, criteria: data.criteria})}\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PinContainer);\n"]},"metadata":{},"sourceType":"module"}